{"version":3,"sources":["services/LocalStoreService.js","context/FiatContext.js","context/ConfigurationContext.js","context/ServerContext.js","components/BalancesTable.js","context/UuidContext.js","context/SocketContext.js","context/BalancesContext.js","context/PerformanceContext.js","components/StatusView.js","components/TimelineView.js","context/StartingBalanceContext.js","components/PerformanceSummary.js","pages/Portfolio.js","components/LineChart.js","pages/PPerformance.js","components/LineChartCoins.js","pages/CoinAnalysis.js","components/HistoryTable.js","pages/EventHistory.js","context/ConfigurationInputContext.js","components/HtmlToolTip.js","components/ConfigP1.js","context/CoinContext.js","components/ConfigP2.js","components/ConfigP3.js","components/ConfigP4.js","components/ConfigMain.js","pages/Configuration.js","pages/Support.js","routes/Routes.js","pages/Main.js","pages/Public.js","pages/Switch.js","services/SocketService.js","App.js","index.js"],"names":["useLocalStore","localStorageKey","defaultValue","React","useState","localStorage","getItem","value","setValue","useEffect","setItem","FiatContext","createContext","FiatProvider","props","fiatStore","fiat","setFiat","Provider","children","ConfigurationContext","ConfigurationProvider","configuration","setConfiguration","ServerContext","ServerProvider","status","updated","serverversion","servertime","access","allow","reason","token","publicKey","server","setServer","useTableHeadStyles","makeStyles","theme","headcolor","palette","type","backgroundColor","EnhancedTableHead","checkbox","headCells","onSelectAllClick","onSort","numSelected","rowCount","headless","classes","Checkbox","indeterminate","checked","onChange","inputProps","TableHead","TableRow","className","TableCell","padding","map","headCell","align","disablePadding","style","minWidth","width","TableSortLabel","active","direction","order","onClick","id","label","useToolbarStyles","root","paddingLeft","spacing","paddingRight","highlight","color","secondary","main","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","selected","portfolio","handleOrder","setSelected","basecoin","length","Toolbar","clsx","Typography","variant","component","join","Button","startIcon","selectedCoins","i","selectedCoin","find","coin","push","useStyles","paper","marginBottom","table","paddingTop","paddingBottom","tableRow","height","visuallyHidden","border","clip","margin","overflow","position","top","formatResult","num","dec","result","includes","arr","split","sig","Math","round","len","toString","Number","toFixed","BalancesTable","useTheme","balances","threshold","useContext","onOrder","handleTableUpdate","onUpdate","setHeadCells","rows","setRows","botID","window","location","pathname","match","defaultsort","sortby","sortorder","JSON","stringify","sortPrefsJSON","setSortPrefsJSON","parse","sortPrefs","setSortPrefs","reload","bot","newSortPrefs","useRef","addEventListener","event","key","sortPrefsUpdate","newValue","newHeadCells","header","current","sortTable","newRows","sort","a","b","tooSmallAmount","Paper","TableContainer","Table","size","newSelecteds","n","filter","newprefs","index","findIndex","updateSortPrefs","TableBody","row","isItemSelected","indexOf","labelId","sidechip","tradelabel","trade","tradechip","Chip","disabled","sidelabel","side","reverse","distribution","target","error","valid","warning","success","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","scope","number","last","timestamp","uuid","crypt","Crypt","md","rsaStandard","socket","socketio","auth","encryptedUuid","Date","encrypt","getTime","BalancesContext","BalancesProvider","setBalances","PerformanceContext","PerformanceProvider","performance","setPerformance","flexGrow","StatusView","statuschip","Grid","container","alignItems","item","xs","stepper","TimelineView","numdays","startdate","data","date1","timeDiff","now","adjusted","timeshift","add","hours","shiftedDate","getFullYear","getMonth","padStart","getDate","Stepper","alternativeLabel","activeStep","connector","ColorlibConnector","Step","StepLabel","StepIconComponent","ColorlibStepIcon","withStyles","backgroundImage","completed","line","borderRadius","StepConnector","useColorlibStepIconStyles","zIndex","display","justifyContent","boxShadow","icons","1","2","String","icon","StartingBalanceContext","StartingBalanceProvider","startingBalance","setStartingBalance","change","performanceSummary","setPerformanceSummary","currency","leftTxt","rightTxt","currentValue","forEach","eur","usd","hodlvalue","coins","c","netoffset","starting","abs","backdrop","drawer","CircularProgressWithLabel","Box","CircularProgress","left","bottom","right","Portfolio","open","setOpen","progress","setProgress","remainingSymbols","setRemainingSymbols","timeout","setTimeout","cancel","setCancel","setPortfolio","on","off","emit","Object","keys","Backdrop","Dialog","fullWidth","maxWidth","DialogContent","DialogContentText","noWrap","symbol","DialogActions","p","lg","Hidden","xsDown","sm","LineChart","mode","data1","data2","setTitle","enoughData","getTheme","axis","ticks","stroke","fill","legend","crosshair","getAxis2","legendOffset","legendPosition","tooltip","input","background","point","serieId","xFormatted","yFormatted","xScale","format","useUTC","precision","xFormat","yScale","min","max","stacked","yFormat","curve","colors","axisTop","axisRight","axisBottom","axisLeft","enablePoints","enableGridX","enableGridY","useMesh","crosshairType","lineWidth","Alert","severity","StyledButton","Performance","setData1","setData2","graph","setGraph","toggleGraph","values","fiatValues","fiatChange","valuesNorm","fiatValuesNorm","changeNorm","fiatChangeNorm","netvalues","netchange","netvaluesfiat","netchangefiat","newdata1","newdata2","computeGraphs","getPerf","day","normalize","multiplier","fiatValue","price","offset","initialValue","initialFiatValue","initialValueNorm","initialFiatValueNorm","valueNorm","fiatValueNorm","netvalue","netvaluefiat","initial","x","date","y","basecoinnorm","fiatnorm","net","netfiat","justify","FormControlLabel","control","labelPlacement","disableRipple","Fragment","prices","legends","scheme","anchor","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","itemTextColor","effects","itemBackground","CoinAnalysis","StyledTableCell","head","common","black","white","body","fontSize","StyledTableRow","action","errortext","HistoryTable","openDelete","setOpenDelete","currentPage","setCurrentPage","total","eventdata","setEventdata","page","setFilter","logs","history","setHistory","hist","log","time","handleHistoryChange","summary","pt","onClose","DialogTitle","pl","pr","ToggleButtonGroup","newTypes","aria-label","ToggleButton","noValidate","autoComplete","TextField","e","Pagination","count","ceil","shape","newPage","EventHistory","ConfigurationInputContext","ConfigurationInputProvider","configurationInput","setConfigurationInput","HtmlTooltip","typography","pxToRem","Tooltip","ConfigP1","apiKey","setApiKey","apiSecret","setApiSecret","onInput","callback","field","handleTooltipClose","gutterBottom","ClickAwayListener","onClickAway","m","Link","href","rel","disableFocusListener","disableHoverListener","disableTouchListener","interactive","IconButton","required","name","CoinContext","CoinProvider","basecoins","setBasecoins","iOSBoxShadow","MySlider","thumb","marginTop","marginLeft","valueLabel","track","rail","opacity","mark","markActive","Slider","marks","headheight","cell","cell2","textinput","textinput2","LightTooltip","shadows","ConfigP2","pf","newPortfolio","portfolioReceived","setPortfolioReceived","coinsReceived","setCoinsReceived","setBasecoin","initialOffset","deleteCoin","setDeleteCoin","excludedChangeRef","excludedChange","getPortfolio","excluded","base","usercoins","numCoins","slider","prevState","updateCurrentDistribution","totalValue","c2","currentDistribution","distr","resetPortfolio","toggleExcluded","handleSlider","original","select","maxSlider","totalSlider","numSlider","remainingSlider","numCoinsZero","labelFormatter","splice","confirmDelete","FormControl","InputLabel","Select","MenuItem","FormHelperText","Skeleton","animation","elevation","aria-labelledby","allSelected","isSelected","step","valueLabelDisplay","valueLabelFormat","Input","disableUnderline","textAlign","test","replace","handleOffset","onBlur","handleBlur","parseFloat","handleDelete","columns","headerName","editable","valueFormatter","highlightSelected","today","outofbounce","ConfigP3","pickerOpen","setPickerOpen","initRef","liquidityRef","cloneDeep","liquidity","liqIndexRef","selectedDateRef","balanceDay","setBalanceDay","liq","inp","changes","liqcoin","suggested","checkLiquidityChanges","acceptDateChange","handleCurrent","updateBalanceDay","indate","isBefore","perf","yesterday","subDays","newChanges","newStartPerformance","newLiquidity","openTT","setOpenTT","utils","DateFnsUtils","DatePicker","onOpen","disableToolbar","disableFuture","minDate","onAccept","renderDay","selectedDay","dayInCurrentMonth","dayComponent","d","dates","autoHeight","density","disableColumnSelector","disableColumnMenu","hideFooter","hideFooterPagination","hideFooterRowCount","onEditCellChangeCommitted","newIndex","newBalance","formControl","selectEmpty","ConfigP4","botname","setBotname","showname","setShowname","setThreshold","ordertype","setOrdertype","setHeadless","cooldown","setCooldown","emojibuy","emojiBuy","setEmojiBuy","emojisell","emojiSell","setEmojiSell","helperText","InputProps","startAdornment","InputAdornment","fromCodePoint","layout","marginRight","breakpoints","up","buttons","button","steps","ConfigMain","useSnackbar","enqueueSnackbar","closeSnackbar","setActiveStep","coinsLoaded","setCoinsLoaded","setInput","recreate","handleInput","newInput","storeConfiguration","encryptedInput","CssBaseline","Error","getStepContent","autoHideDuration","Configuration","logo","address","network","qr","Deposit","src","alt","Support","routesUp","path","sidebarName","PieChartIcon","BarChartIcon","PPerformance","ShowChartIcon","HistoryIcon","routesDown","SettingsIcon","FavoriteIcon","appBar","flexShrink","drawerPaper","drawerContainer","settingsPaper","content","form","footer","bottomPush","bottomPush2","smallScreenToggles","Copyright","textDecoration","Main","useHistory","version","pckg2","setMode","setFiatStore","modus","setModus","outdated","setOutdated","setDisconnected","modusSwitchDisabled","setModusSwitchDisabled","flexWidthDown","setFlexWidthDown","flexWidthUp","setFlexWidthUp","overlayMenu","setOverlayMenu","latestVersion","getBotPath","botPath","setBotPath","getPath","generatePath","document","newMode","newFiat","unlisten","listen","wdtDown","wdtUp","handleDarkmode","handleFiat","handleModus","newModus","createMuiTheme","onLogout","toggleOverlayMenu","SideMenu","showToolbar","List","prop","to","ListItem","ListItemIcon","ListItemText","primaryTypographyProps","Divider","ThemeProvider","AppBar","lgUp","ButtonBase","openUrl","origin","nowrap","zeroMinWidth","mt","charAt","wdt","update","logout","smUp","mdDown","Drawer","exact","FlexToolbar","Public","loginNow","setLoginNow","accessMsg","setAccessMsg","serverDown","setServerDown","username","setUsername","password","setPassword","handleRefresh","onLoginInput","Switch","goPublic","setGoPublic","SocketService","newPerformance","updatePerformance","config","sb","handleEvent","disconnect","App","script1","createElement","async","appendChild","script2","maxSnack","anchorOrigin","vertical","horizontal","TransitionComponent","Fade","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48888bfa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const useLocalStore = (localStorageKey, defaultValue) => {\r\n  const [value, setValue] = React.useState(\r\n    localStorage.getItem(localStorageKey) || defaultValue\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(localStorageKey, value);\r\n  }, [value]);\r\n\r\n  return [value, setValue];\r\n};","import React, { useState, createContext } from 'react';\r\nimport { useLocalStore } from \"../services/LocalStoreService\";\r\n\r\nexport const FiatContext = createContext();\r\n\r\nexport const FiatProvider = (props) => {\r\n    const fiatStore = useLocalStore('fiat', 'EUR')[0];\r\n    const [fiat, setFiat] = useState(fiatStore);\r\n\r\n    return (\r\n        <FiatContext.Provider value={[fiat, setFiat]}>\r\n            {props.children}\r\n        </FiatContext.Provider>\r\n    )\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const ConfigurationContext = createContext();\r\n\r\nexport const ConfigurationProvider = (props) => {\r\n    const [configuration, setConfiguration] = useState({});\r\n\r\n    return (\r\n        <ConfigurationContext.Provider value={[configuration, setConfiguration]}>\r\n            {props.children}\r\n        </ConfigurationContext.Provider>\r\n    )\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const ServerContext = createContext();\r\n\r\nexport const ServerProvider = (props) => {\r\n    const [server, setServer] = useState({\r\n        status: 'disconnected',\r\n        updated: '---',\r\n        serverversion: '0.0',\r\n        servertime: '---',\r\n        access: { allow: false, reason: 'initial state', token: null },\r\n        publicKey: '',\r\n    });\r\n\r\n    return (\r\n        <ServerContext.Provider value={[server, setServer]}>\r\n            {props.children}\r\n        </ServerContext.Provider>\r\n    )\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { useLocalStore } from \"../services/LocalStoreService\";\r\n\r\nconst useTableHeadStyles = makeStyles((theme) => ({\r\n    headcolor:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                backgroundColor: '#aaaaaa',\r\n            }\r\n            : {\r\n                backgroundColor: '#777777',\r\n            },\r\n}));\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { headCells, onSelectAllClick, onSort, numSelected, rowCount, headless } = props;\r\n    const classes = useTableHeadStyles();\r\n\r\n    let checkbox;\r\n    if (!headless) {\r\n        checkbox = <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select coins' }}\r\n        />\r\n    } else {\r\n        checkbox = null;\r\n    }\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow className={classes.headcolor}>\r\n                <TableCell padding=\"checkbox\">\r\n                    {checkbox}\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.align}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        style={{ minWidth: headCell.width }}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={headCell.active}\r\n                            direction={headCell.order}\r\n                            onClick={() => { onSort(headCell.id) }}>\r\n                            {headCell.label}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    headCells: PropTypes.array.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n    headless: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { selected, headless, portfolio, handleOrder, setSelected, basecoin } = props;\r\n    const numSelected = selected.length;\r\n\r\n    function onOrder() {\r\n        setSelected([]);\r\n        let selectedCoins = [];\r\n        for (let i = 0; i < selected.length; i++) {\r\n            let selectedCoin = portfolio.find(({ coin }) => coin === selected[i]);\r\n            if (selectedCoin.coin !== basecoin) selectedCoins.push(selectedCoin);\r\n        }\r\n\r\n        handleOrder(selectedCoins);\r\n    }\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {numSelected} {(numSelected === 1) ? 'coin' : 'coins'} selected: {selected.join(', ')}\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"subtitle1\" id=\"tableTitle\" component=\"div\">\r\n                    {(!headless) ? ('Select coins to manually submit order') : ('Running in automatic mode')}\r\n                </Typography>\r\n            )}\r\n\r\n            {(numSelected > 0) && (\r\n                <Button variant=\"contained\" color=\"secondary\" style={{ width: '220px' }} startIcon={<BackupIcon />} onClick={onOrder}>\r\n                    Submit Order\r\n                </Button>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    selected: PropTypes.array.isRequired,\r\n    headless: PropTypes.bool.isRequired,\r\n    portfolio: PropTypes.array.isRequired,\r\n    handleOrder: PropTypes.func.isRequired,\r\n    setSelected: PropTypes.func.isRequired,\r\n    basecoin: PropTypes.string.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        minWidth: 750,\r\n        \"& .MuiTableCell-sizeSmall\": {\r\n            paddingTop: '9px',\r\n            paddingBottom: '9px',\r\n        }\r\n    },\r\n    tableRow: {\r\n        height: 50,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nfunction formatResult(num, dec) {\r\n    // Complex logic needed to have fixed decimals, avoid scientific notation, and to deal with numbers that already have scientific notation\r\n    let result;\r\n    if (!(\"\" + num).includes(\"e\")) {\r\n        result = +(Math.round(num + \"e+\" + dec) + \"e-\" + dec);\r\n    } else {\r\n        let arr = (\"\" + num).split(\"e\");\r\n        let sig = \"\"\r\n        if (+arr[1] + dec > 0) {\r\n            sig = \"+\";\r\n        }\r\n        result = +(Math.round(+arr[0] + \"e\" + sig + (+arr[1] + dec)) + \"e-\" + dec);\r\n    }\r\n\r\n    let len = result.toString().split('.')[0].length;\r\n\r\n    return Number(result).toFixed(dec + 1 - len);\r\n}\r\n\r\nexport default function BalancesTable(props) {\r\n    const classes = useStyles();\r\n    const [selected, setSelected] = useState([]);\r\n    const theme = useTheme();\r\n    const balances = props.balances;\r\n    const threshold = balances.threshold;\r\n    const configuration = useContext(ConfigurationContext)[0];\r\n    const headless = configuration.headless || false;\r\n    const handleOrder = props.onOrder;\r\n    const handleTableUpdate = props.onUpdate;\r\n\r\n    const [headCells, setHeadCells] = useState([\r\n        { id: 'coin', align: 'left', width: '60px', disablePadding: true, label: 'Coin', active: false, order: 'asc' },\r\n        { id: 'number', align: 'right', width: '100px', disablePadding: false, label: 'Amount', active: false, order: 'asc' },\r\n        { id: 'last', align: 'right', width: '110px', disablePadding: false, label: 'Price', active: false, order: 'asc' },\r\n        { id: 'value', align: 'right', width: '110px', disablePadding: false, label: 'Value', active: false, order: 'asc' },\r\n        { id: 'distribution', align: 'right', width: '80px', disablePadding: false, label: 'Portfolio %', active: false, order: 'asc' },\r\n        { id: 'target', align: 'right', width: '80px', disablePadding: false, label: 'Target %', active: false, order: 'asc' },\r\n        { id: 'trade', align: 'center', width: '100px', disablePadding: false, label: 'Trade', active: false, order: 'asc' },\r\n        { id: 'delta', align: 'center', width: '100px', disablePadding: false, label: 'Order Side', active: false, order: 'asc' },\r\n    ]);\r\n\r\n    const getBotID = () => {\r\n        const pathname = window.location.pathname;\r\n        const result = pathname.match(/bot[0-9]{3}/);\r\n        return result[0];\r\n    }\r\n\r\n    const [rows, setRows] = useState([]);\r\n\r\n    const botID = getBotID();\r\n    const defaultsort = {\r\n        botID: botID,\r\n        sortby: 'delta',\r\n        sortorder: 'asc'\r\n    };\r\n\r\n    const [sortPrefsJSON, setSortPrefsJSON] = useLocalStore('sortprefs', JSON.stringify([defaultsort]));\r\n    const [sortPrefs, setSortPrefs] = useState(JSON.parse(sortPrefsJSON));\r\n\r\n    if (!sortPrefs) window.location.reload();       // Avoid crash when cookies are cleared\r\n    let match = sortPrefs.find((bot) => bot.botID === botID);\r\n\r\n    if (!match) {\r\n        let newSortPrefs = sortPrefs;\r\n        newSortPrefs.push(defaultsort);\r\n        setSortPrefs(newSortPrefs);\r\n        setSortPrefsJSON(JSON.stringify(newSortPrefs));\r\n        match = defaultsort;\r\n    }\r\n\r\n    const sortby = useRef(match.sortby);\r\n    const sortorder = useRef(match.sortorder);\r\n\r\n    const updateSortPrefs = (newprefs) => {\r\n        let newSortPrefs = sortPrefs;\r\n        let index = newSortPrefs.findIndex((bot) => bot.botID === botID);\r\n        newSortPrefs[index] = newprefs;\r\n        setSortPrefs(newSortPrefs);\r\n        setSortPrefsJSON(JSON.stringify(newSortPrefs));\r\n    }\r\n\r\n    const sortPrefsUpdate = (newSortPrefs) => {\r\n        setSortPrefs(JSON.parse(newSortPrefs));\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Listen to local store changes (when another page changes sort preferences)\r\n        window.addEventListener('storage', (event) => {\r\n            if (event.key === 'sortprefs') {\r\n                const newSortPrefs = event.newValue;\r\n                sortPrefsUpdate(newSortPrefs);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Update headcell to show the right sorting arrow\r\n        let newHeadCells = [...headCells];\r\n        let header = newHeadCells.find((header) => header.id === sortby.current);\r\n        header.order = sortorder.current;\r\n        header.active = true;\r\n        setHeadCells(newHeadCells);\r\n\r\n        return () => {\r\n        }\r\n    }, [sortby.current, sortorder.current]);\r\n\r\n    useEffect(() => {\r\n        sortTable();\r\n\r\n        return () => {\r\n        }\r\n    }, [balances]);\r\n\r\n    const sortTable = () => {\r\n        let newRows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n        if (sortorder.current === 'asc')\r\n            newRows.sort((a, b) => (a[sortby.current] < b[sortby.current]) ? 1 : ((b[sortby.current] < a[sortby.current]) ? -1 : 0));\r\n        else\r\n            newRows.sort((a, b) => (a[sortby.current] > b[sortby.current]) ? 1 : ((b[sortby.current] > a[sortby.current]) ? -1 : 0));\r\n\r\n        setRows(newRows);\r\n        handleTableUpdate(newRows);\r\n    }\r\n\r\n    const handleSort = (key) => {\r\n        let newHeadCells = [...headCells];\r\n\r\n        let previous = newHeadCells.find((header) => header.id === sortby.current);\r\n        previous.active = false;\r\n\r\n        let header = newHeadCells.find((header) => header.id === key);\r\n        header.order = (header.order === 'desc') ? 'asc' : 'desc';\r\n        header.active = true;\r\n        setHeadCells(newHeadCells);\r\n\r\n        sortorder.current = header.order;\r\n        sortby.current = key;\r\n\r\n        updateSortPrefs({\r\n            botID: botID,\r\n            sortby: sortby.current,\r\n            sortorder: sortorder.current\r\n        });\r\n        sortTable();\r\n    }\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (selected.length === 0) {\r\n            const newSelecteds = rows.map((n) => n.coin).filter(coin => coin !== configuration.basecoin);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, coin) => {\r\n        if (!headless && coin !== configuration.basecoin) {\r\n            const selectedIndex = selected.indexOf(coin);\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, coin);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n            setSelected(newSelected);\r\n        }\r\n    };\r\n\r\n    const isSelected = (coin) => selected.indexOf(coin) !== -1;\r\n    let tooSmallAmount = false;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <EnhancedTableToolbar selected={selected} headless={headless} portfolio={rows} handleOrder={handleOrder} setSelected={setSelected} basecoin={configuration.basecoin || ''} />\r\n                <TableContainer>\r\n                    <Table\r\n                        className={classes.table}\r\n                        size=\"small\"\r\n                    >\r\n                        <EnhancedTableHead\r\n                            classes={classes}\r\n                            headCells={headCells}\r\n                            numSelected={selected.length}\r\n                            onSelectAllClick={handleSelectAllClick}\r\n                            onSort={handleSort}\r\n                            rowCount={rows.length}\r\n                            headless={headless}\r\n                        />\r\n                        <TableBody>\r\n                            {rows.map((row, index) => {\r\n                                const isItemSelected = isSelected(row.coin);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n                                let sidechip = <div style={{ color: '#999999', width: '120px' }}>-</div>;\r\n                                let tradelabel = formatResult(row.trade, 8);\r\n                                let tradechip = <Chip label={tradelabel} style={{ backgroundColor: theme.palette.text.disabled, color: 'white', width: '120px' }} />;\r\n\r\n                                let sidelabel = row.side;\r\n                                if (row.reverse) sidelabel += ' (reverse)';\r\n\r\n                                if (row.side === 'sell') {\r\n                                    if (row.distribution / row.target - 1 >= threshold / 100) {\r\n                                        sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.error.dark, color: 'white', width: '120px' }} />\r\n                                        if (!row.valid) {\r\n                                            tradechip = <Chip label={tradelabel} style={{ backgroundColor: theme.palette.warning.dark, color: 'white', width: '120px' }} />\r\n                                            tooSmallAmount = true;\r\n                                        }\r\n                                    } else {\r\n                                        sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.text.disabled, color: 'white', width: '120px' }} />\r\n                                    }\r\n                                } else if (row.side === 'buy') {\r\n                                    if (row.distribution / row.target - 1 <= -threshold / 100) {\r\n                                        sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.success.dark, color: 'white', width: '120px' }} />\r\n                                        if (!row.valid) {\r\n                                            tradechip = <Chip label={tradelabel} style={{ backgroundColor: theme.palette.warning.dark, color: 'white', width: '120px' }} />\r\n                                            tooSmallAmount = true;\r\n                                        }\r\n                                    } else {\r\n                                        sidechip = <Chip label={sidelabel} style={{ backgroundColor: theme.palette.text.disabled, color: 'white', width: '120px' }} />\r\n                                    }\r\n                                }\r\n\r\n                                let checkbox;\r\n                                if (!headless && row.coin !== configuration.basecoin) {\r\n                                    checkbox = <Checkbox\r\n                                        checked={isItemSelected}\r\n                                        inputProps={{ 'aria-labelledby': labelId }}\r\n                                    />\r\n                                } else {\r\n                                    checkbox = null;\r\n                                }\r\n\r\n                                return (\r\n                                    <TableRow className={classes.tableRow}\r\n                                        hover\r\n                                        onClick={(event) => handleClick(event, row.coin)}\r\n                                        role=\"checkbox\"\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={row.coin}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n                                        <TableCell padding=\"checkbox\">\r\n                                            {checkbox}\r\n                                        </TableCell>\r\n                                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                            {row.coin}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{formatResult(row.number, 8)}</TableCell>\r\n                                        <TableCell align=\"right\">{formatResult(row.last, 8)}</TableCell>\r\n                                        <TableCell align=\"right\">{formatResult(row.value, 8)}</TableCell>\r\n                                        <TableCell align=\"right\">{formatResult(row.distribution, 3)}</TableCell>\r\n                                        <TableCell align=\"right\">{formatResult(row.target, 3)}</TableCell>\r\n                                        <TableCell align=\"right\">{tradechip}</TableCell>\r\n                                        <TableCell align=\"center\">{sidechip}</TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {(tooSmallAmount) && (\r\n                    <Toolbar>\r\n                        <Typography className={classes.title} variant=\"subtitle1\" style={{ color: theme.palette.warning.dark }} component=\"div\">\r\n                            Trade amounts indicated in orange are too small to execute or exceed your available funds (when using a coin offset)\r\n                        </Typography>\r\n                    </Toolbar>\r\n                )}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}","import { Crypt } from 'hybrid-crypto-js';\r\n\r\nconst uuid = localStorage.getItem('uuid');\r\nconst publicKey = localStorage.getItem('publicKey');\r\n\r\nlet crypt = new Crypt({\r\n    md: 'sha256',\r\n    rsaStandard: 'RSA-OAEP',\r\n});\r\n\r\nexport const encryptedUuid = (timestamp) => {\r\n    if (uuid && publicKey && publicKey.includes('-----BEGIN PUBLIC KEY-----')) return crypt.encrypt(publicKey, `${uuid}@${timestamp.getTime()}`);\r\n    else return false;\r\n}","import socketio from \"socket.io-client\";\r\nimport { encryptedUuid } from '../context/UuidContext';\r\n\r\nexport const socket = socketio('/', {\r\n    auth: {\r\n        encryptedUuid: encryptedUuid(new Date())\r\n    }\r\n});","import React, { useState, createContext } from 'react';\r\n\r\nexport const BalancesContext = createContext();\r\n\r\nexport const BalancesProvider = (props) => {\r\n    const [balances, setBalances] = useState({});\r\n\r\n    return (\r\n        <BalancesContext.Provider value={[balances, setBalances]}>\r\n            {props.children}\r\n        </BalancesContext.Provider>\r\n    )\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const PerformanceContext = createContext();\r\n\r\nexport const PerformanceProvider = (props) => {\r\n    const [performance, setPerformance] = useState([]);\r\n\r\n    return (\r\n        <PerformanceContext.Provider value={[performance, setPerformance]}>\r\n            {props.children}\r\n        </PerformanceContext.Provider>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport { ServerContext } from '../context/ServerContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        height: '68px',\r\n        minWidth: '340px',\r\n    },\r\n}));\r\n\r\nexport default function StatusView() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { status, updated } = useContext(ServerContext)[0];\r\n\r\n    let statuschip;\r\n    if (status === 'connected') {\r\n        statuschip = <Chip label={status} style={{ backgroundColor: theme.palette.success.dark, color: 'white', width: '90px' }} />\r\n    } else {\r\n        statuschip = <Chip label={status} style={{ backgroundColor: theme.palette.error.dark, color: 'white', width: '110px' }} />\r\n    }\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid container item alignItems=\"center\" xs={7}>\r\n                    <Grid item xs={4}><Typography>Status: </Typography></Grid>\r\n                    <Grid item xs={8}>{statuschip}</Grid>\r\n                </Grid>\r\n                <Grid container item alignItems=\"center\" xs={5}>\r\n                    <Grid item xs={12}><Typography>Updated: <b>{updated && updated.split(' ')[1]}</b></Typography></Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper >\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nimport StepConnector from '@material-ui/core/StepConnector';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { add } from 'date-fns'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        height: '68px',\r\n        minWidth: '340px',\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nexport default function TimelineView(props) {\r\n    const classes = useStyles();\r\n\r\n    const configuration = useContext(ConfigurationContext)[0];\r\n    const performance = props.data || [];\r\n\r\n    let numdays = '--';\r\n    let startdate = '----/--/--';\r\n\r\n    const shiftedDate = () => {\r\n        const now = new Date();\r\n        let adjusted = now;\r\n        if (configuration.timeshift && configuration.timeshift !== 0) adjusted = add(now, { hours: configuration.timeshift });\r\n        return adjusted;\r\n    }\r\n\r\n    if (performance.length !== 0) {\r\n        let date1 = new Date(configuration.startdate);\r\n        let date2 = shiftedDate();\r\n        var timeDiff = date2.getTime() - date1.getTime();\r\n\r\n        numdays = Math.round(timeDiff / (1000 * 3600 * 24));\r\n        startdate = date1.getFullYear() + \"/\" + (date1.getMonth() + 1).toString().padStart(2, '0') + \"/\" + date1.getDate().toString().padStart(2, '0');\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container alignItems=\"center\" >\r\n                <Grid item xs={3}><Typography align={'right'}>{startdate}</Typography></Grid>\r\n                <Grid item xs={6}>\r\n                    <Stepper className={classes.stepper} alternativeLabel activeStep={1} connector={<ColorlibConnector />}>\r\n                        <Step key={0}>\r\n                            <StepLabel StepIconComponent={ColorlibStepIcon}></StepLabel>\r\n                        </Step>\r\n                        <Step key={1}>\r\n                            <StepLabel StepIconComponent={ColorlibStepIcon}></StepLabel>\r\n                        </Step>\r\n                    </Stepper>\r\n                </Grid>\r\n                <Grid item xs={3}><Typography><b>{numdays}</b> {(numdays === 1) ? 'day' : 'days'}</Typography></Grid>\r\n            </Grid>\r\n        </Paper >\r\n    )\r\n}\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n    },\r\n    active: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    completed: {\r\n        '& $line': {\r\n            backgroundImage:\r\n                'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\r\n        },\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: '#eaeaf0',\r\n        borderRadius: 1,\r\n    },\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: '#ccc',\r\n        zIndex: 1,\r\n        color: '#fff',\r\n        width: 50,\r\n        height: 50,\r\n        display: 'flex',\r\n        borderRadius: '50%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    active: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n        boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\r\n    },\r\n    completed: {\r\n        backgroundImage:\r\n            'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\r\n    },\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: <RadioButtonCheckedIcon />,\r\n        2: <ArrowForwardIosIcon />,\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed,\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const StartingBalanceContext = createContext();\r\n\r\nexport const StartingBalanceProvider = (props) => {\r\n    const [startingBalance, setStartingBalance] = useState([]);\r\n\r\n    return (\r\n        <StartingBalanceContext.Provider value={[startingBalance, setStartingBalance]}>\r\n            {props.children}\r\n        </StartingBalanceContext.Provider>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { FiatContext } from '../context/FiatContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\n\r\nexport default function StatusView(props) {\r\n    const startingBalance = useContext(StartingBalanceContext)[0];\r\n    const performance = useContext(PerformanceContext)[0];\r\n    const configuration = useContext(ConfigurationContext)[0];\r\n    const [performanceSummary, setPerformanceSummary] = useState({ value: '0', change: '0' });\r\n    const balances = props.balances;\r\n    const type = props.type;\r\n    const fiat = useContext(FiatContext)[0];\r\n    let currency = (type === 'basecoin') ? configuration.basecoin : (type === 'fiat' || type === 'net-fiat') ? fiat : `Net ${configuration.basecoin}`;\r\n    const leftTxt = (type === 'net-basecoin') ? `Net effect (${configuration.basecoin})` : (type === 'net-fiat') ? `Net effect (${currency})` : `${currency} value`;\r\n    const rightTxt = (type === 'net-basecoin' || type === 'net-fiat') ? 'Net effect (%)' : `${currency} change`;\r\n\r\n    useEffect(() => {\r\n        let rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n        let currentValue = 0;\r\n        rows.forEach((coin) => {\r\n            currentValue += coin.number * coin.last;\r\n        });\r\n\r\n        if (type === 'fiat' || type === 'net-fiat') {\r\n            if (configuration.basecoin === 'BTC') {\r\n                currentValue = currentValue * ((fiat === 'EUR') ? balances.eur : balances.usd);\r\n            } else if (configuration.basecoin === 'BUSD' || configuration.basecoin === 'USDT' || configuration.basecoin === 'USDC') {\r\n                currentValue = currentValue * ((fiat === 'EUR') ? balances.eur / balances.usd : 1);\r\n            } else if (configuration.basecoin === 'EUR') {\r\n                currentValue = currentValue * ((fiat === 'EUR') ? 1 : balances.usd / balances.eur);\r\n            }\r\n        }\r\n\r\n        let change;\r\n\r\n        if (currentValue !== 0) {\r\n            if (type === 'basecoin') change = (currentValue / startingBalance.basecoin - 1) * 100;\r\n            else if (fiat === 'EUR') change = (currentValue / startingBalance.eur - 1) * 100;\r\n            else change = (currentValue / startingBalance.usd - 1) * 100;\r\n\r\n            let hodlvalue = 0;\r\n\r\n            if (startingBalance.coins) rows.forEach((coin) => {\r\n                let c = startingBalance.coins.find(c => c.coin === coin.coin);\r\n                // Old performance files may have coins with number = 0, and then netvalue shouldn't be impacted\r\n                // Could also happen when multiple bots track the same portfolio, and a coin is excluded in one, but not the other(s)\r\n                if (c && c.coin && coin.number !== 0) hodlvalue += c.number * coin.last;\r\n            });\r\n\r\n            let netoffset = 0;\r\n            if (performance.length !== 0) {\r\n                let perftoday = performance[performance.length - 1];\r\n                netoffset = perftoday.netoffset;\r\n            }\r\n\r\n            hodlvalue -= netoffset;\r\n\r\n            if (type === 'net-basecoin') {\r\n                change = ((currentValue - hodlvalue) / startingBalance.basecoin) * 100;\r\n                currentValue = currentValue - hodlvalue;\r\n            }\r\n\r\n            if (type === 'net-fiat') {\r\n                let starting = (fiat === 'EUR') ? startingBalance.eur : startingBalance.usd;\r\n\r\n                if (configuration.basecoin === 'BTC') {\r\n                    hodlvalue = (fiat === 'EUR') ? hodlvalue * balances.eur : hodlvalue * balances.usd;\r\n                } else if (configuration.basecoin === 'BUSD' || configuration.basecoin === 'USDT' || configuration.basecoin === 'USDC') {\r\n                    hodlvalue = (fiat === 'EUR') ? hodlvalue * balances.eur / balances.usd : hodlvalue;\r\n                } else if (configuration.basecoin === 'EUR') {\r\n                    hodlvalue = (fiat === 'EUR') ? hodlvalue : hodlvalue * balances.usd / balances.eur;\r\n                }\r\n\r\n                change = ((currentValue - hodlvalue) / starting) * 100;\r\n                currentValue = currentValue - hodlvalue;\r\n            }\r\n\r\n            if (change) {\r\n                if (change < 100) change = change.toFixed(2);\r\n                else if (change < 1000) change = change.toFixed(1);\r\n                else change = change.toFixed(0);\r\n            } else {\r\n                change = Number('0').toFixed(2);\r\n            }\r\n            if (currentValue) {\r\n                if (Math.abs(currentValue) < 0.000001) currentValue = currentValue.toFixed(2)\r\n                else if (Math.abs(currentValue) < 0.1) currentValue = currentValue.toFixed(6)\r\n                else if (Math.abs(currentValue) < 1) currentValue = currentValue.toFixed(5)\r\n                else if (Math.abs(currentValue) < 10) currentValue = currentValue.toFixed(4)\r\n                else if (Math.abs(currentValue) < 100) currentValue = currentValue.toFixed(3)\r\n                else if (Math.abs(currentValue) < 1000) currentValue = currentValue.toFixed(2);\r\n                else currentValue = currentValue.toFixed(2);\r\n            } else {\r\n                currentValue = Number('0').toFixed(2);\r\n            }\r\n        } else {\r\n            change = Number('0').toFixed(2);\r\n        }\r\n\r\n        setPerformanceSummary({\r\n            value: currentValue,\r\n            change: change,\r\n        });\r\n    }, [balances, startingBalance, fiat]);\r\n\r\n    return (\r\n        <Grid container alignItems=\"center\">\r\n            <Grid container item direction=\"column\" alignItems=\"center\" xs={6}>\r\n                <Grid item xs={12}><Typography variant=\"h4\">{performanceSummary.value}</Typography></Grid>\r\n                <Grid item xs={12}><Typography>{leftTxt}</Typography></Grid>\r\n            </Grid>\r\n            <Grid container item direction=\"column\" alignItems=\"center\" xs={6}>\r\n                <Grid item xs={12}><Typography variant=\"h4\">{performanceSummary.change}%</Typography></Grid>\r\n                <Grid item xs={12}><Typography>{rightTxt}</Typography></Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport BalancesTable from \"../components/BalancesTable\";\r\nimport { socket } from '../context/SocketContext';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\nimport StatusView from \"../components/StatusView\";\r\nimport TimelineView from \"../components/TimelineView\";\r\nimport PerformanceSummary from \"../components/PerformanceSummary\";\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\nimport { ServerContext } from '../context/ServerContext';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" size={90} {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"h5\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst Portfolio = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const balances = useContext(BalancesContext)[0];\r\n  const performance = useContext(PerformanceContext)[0];\r\n  const startingBalance = useContext(StartingBalanceContext)[0];\r\n  const { access } = useContext(ServerContext)[0];\r\n  const [open, setOpen] = useState(true);\r\n  const [progress, setProgress] = useState(-1);\r\n  const [remainingSymbols, setRemainingSymbols] = useState([]);\r\n  const [timeout, setTimeout] = useState(false);\r\n  const [cancel, setCancel] = useState(false);\r\n  const [portfolio, setPortfolio] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"coin-loading-progress\", (data) => {\r\n      setProgress(data.progress);\r\n      setRemainingSymbols(data.remainingSymbols);\r\n      setTimeout(data.timeout);\r\n      setCancel(data.cancel);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"coin-loading-progress\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket && startingBalance.length === 0 && access.allow) socket.emit(\"get-starting-balances\", access.token);\r\n    return () => {\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setOpen(Object.keys(balances).length === 0 && progress !== -1);\r\n    return () => {\r\n    }\r\n  }, [balances, progress]);\r\n\r\n  function handleUpdateTable(data) {\r\n    setPortfolio(data);\r\n  }\r\n\r\n  function handleOrder(selected) {\r\n    if (socket && access.allow) socket.emit(\"place-order\", selected, access.token);\r\n  }\r\n\r\n  const closeBackdrop = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  const cancelLoading = () => {\r\n    if (socket && access.allow) socket.emit(\"cancel-loading\", access.token);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Backdrop className={classes.backdrop} open={open}>\r\n        {cancel ? (\r\n          <Dialog\r\n            open={open && cancel}\r\n            fullWidth={true}\r\n            maxWidth={'sm'}\r\n          >\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                <Typography variant=\"overline\" color=\"secondary\">\r\n                  Failed to load all symbols\r\n                </Typography>\r\n              </DialogContentText>\r\n              <DialogContentText>\r\n                <Grid container direction=\"column\" >\r\n                  <Typography variant=\"overline\" color=\"inherit\" noWrap>\r\n                    The following symbol(s) couldn't be loaded:\r\n                  </Typography>\r\n                  {remainingSymbols.map(symbol => {\r\n                    return (\r\n                      <Typography variant=\"overline\" color=\"inherit\" display=\"block\" noWrap>\r\n                        <b>{\">\"} {symbol}</b>\r\n                      </Typography>\r\n                    )\r\n                  })}\r\n                  <Typography variant=\"overline\" color=\"inherit\" noWrap>\r\n                    The exchange may not support the trading pair(s)\r\n                  </Typography>\r\n                  <Typography variant=\"overline\" color=\"inherit\" noWrap>\r\n                    To resolve this, exclude the coin(s) in the bot configuration\r\n                  </Typography>\r\n                </Grid>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button variant=\"contained\" color=\"secondary\" style={{ width: '100px' }} onClick={closeBackdrop}>\r\n                OK\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        ) : (\r\n          <Grid container spacing={3} direction=\"column\" alignItems=\"center\">\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" noWrap>\r\n                Loading coin data\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CircularProgressWithLabel color=\"inherit\" variant=\"determinate\" value={progress} />\r\n            </Grid>\r\n            {timeout ? (\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Box p={1} />\r\n                <Typography variant=\"h7\" noWrap>\r\n                  This seems to be taking quite long\r\n                </Typography>\r\n                <Box p={1} />\r\n                <Button variant=\"contained\" color=\"primary\" style={{ width: '120px' }} onClick={cancelLoading}>\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n            ) : (\r\n              <Box height={88} />\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </Backdrop>\r\n      <Grid container spacing={3} alignItems=\"flex-start\">\r\n        <Grid item xs={12} md={4} lg={6}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Portfolio\r\n          </Typography>\r\n        </Grid>\r\n        <Hidden xsDown>\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TimelineView data={performance} />\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={6} lg={3}>\r\n          <Paper style={{ height: '100px', minWidth: '340px' }} className={classes.paper}>\r\n            <PerformanceSummary balances={balances} type='basecoin' />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={6} lg={3}>\r\n          <Paper style={{ height: '100px', minWidth: '340px' }} className={classes.paper}>\r\n            <PerformanceSummary balances={balances} type='fiat' />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={6} lg={3}>\r\n          <Paper style={{ height: '100px', minWidth: '340px' }} className={classes.paper}>\r\n            <PerformanceSummary balances={balances} type='net-basecoin' />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={6} lg={3}>\r\n          <Paper style={{ height: '100px', minWidth: '340px' }} className={classes.paper}>\r\n            <PerformanceSummary balances={balances} type='net-fiat' />\r\n          </Paper>\r\n        </Grid>\r\n        <Hidden xsDown>\r\n          <Grid item md={12} lg={8}>\r\n            <BalancesTable balances={balances} onOrder={handleOrder} onUpdate={handleUpdateTable} />\r\n          </Grid>\r\n        </Hidden>\r\n      </Grid>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ResponsiveLine } from '@nivo/line'\r\nimport \"./LineChart.css\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nexport default function LineChart(props) {\r\n    const mode = useTheme().palette.type;\r\n    let data1 = props.data1;\r\n    let data2 = props.data2;\r\n    const [title, setTitle] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (data1 && data1.length !== 0) setTitle(data1[0].id);\r\n        else if (data2 && data2.length !== 0) setTitle(data2[0].id);\r\n        return () => {\r\n        }\r\n    }, [data1, data2]);\r\n\r\n    let enoughData = false;\r\n    if (data2 && data2[0].data.length > 1) enoughData = true;\r\n\r\n    const getTheme = () => {\r\n        return {\r\n            axis: {\r\n                ticks: {\r\n                    line: {\r\n                        stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    },\r\n                    text: { fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\" }\r\n                },\r\n                legend: {\r\n                    text: {\r\n                        fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    }\r\n                }\r\n            },\r\n            crosshair: {\r\n                line: {\r\n                    stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                },\r\n            },\r\n            // tooltip: {\r\n            //     container: {\r\n            //         background: (mode === 'light') ? \"#FFFFFF\" : \"#000000\",\r\n            //         color: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n            //     }\r\n            // }\r\n        };\r\n    };\r\n\r\n    const getAxis1 = () => {\r\n        if (data1.length !== 0) {\r\n            return {\r\n                legend: data1[0].id,\r\n                legendOffset: -80,\r\n                legendPosition: 'middle',\r\n            }\r\n        } else {\r\n            // In case data1 is not set, just use axis2 on both sides\r\n            return getAxis2;\r\n        }\r\n    }\r\n\r\n    const getAxis2 = () => {\r\n        if (data2.length !== 0) {\r\n            return {\r\n                legend: data2[0].id,\r\n                legendOffset: 70,\r\n                legendPosition: 'middle',\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div><b>{title}</b></div>\r\n            <div className=\"secondGraph\">\r\n                {(data1 && enoughData) ? (\r\n                    <ResponsiveLine\r\n                        data={data1}\r\n                        tooltip={(input) => {\r\n                            return (\r\n                                <div style={{\r\n                                    background: (mode === 'light') ? \"#FFFFFF\" : \"#000000\",\r\n                                    boxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n                                    padding: '6px 10px 6px 10px'\r\n                                }}>\r\n                                    <div style={{ color: 'rgb(211,47,47)' }}>\r\n                                        ▉ {input.point.serieId}:&nbsp;\r\n                                    </div>\r\n                                    <div style={{ color: (mode === 'light') ? \"#000000\" : \"#FFFFFF\" }}>\r\n                                        {input.point.data.xFormatted} | <strong>{input.point.data.yFormatted}</strong>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }}\r\n                        theme={getTheme()}\r\n                        margin={{ top: 40, right: 90, bottom: 50, left: 90 }}\r\n                        xScale={{\r\n                            type: 'time',\r\n                            format: '%Y/%m/%d',\r\n                            useUTC: false,\r\n                            precision: 'day',\r\n                        }}\r\n                        xFormat=\"time:%Y/%m/%d\"\r\n                        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                        yFormat=\" >-.6f\"\r\n                        curve=\"monotoneX\"\r\n                        colors={['rgb(255,255,255,0)']}\r\n                        axisTop={null}\r\n                        axisRight={null}\r\n                        axisBottom={null}\r\n                        axisLeft={getAxis1()}\r\n                        enablePoints={false}\r\n                        enableGridX={false}\r\n                        enableGridY={false}\r\n                        useMesh={true}\r\n                        // enableSlices=\"y\"\r\n                        crosshairType=\"cross\"\r\n                    />\r\n                ) : (null)}\r\n            </div>\r\n            <div className=\"graphContainer\">\r\n                {(data2 && enoughData) ? (\r\n                    <ResponsiveLine\r\n                        data={data2}\r\n                        theme={getTheme()}\r\n                        margin={{ top: 40, right: 90, bottom: 50, left: 90 }}\r\n                        xScale={{\r\n                            type: 'time',\r\n                            format: '%Y/%m/%d',\r\n                            useUTC: false,\r\n                            precision: 'day',\r\n                        }}\r\n                        xFormat=\"time:%Y/%m/%d\"\r\n                        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                        yFormat=\" >-.6f\"\r\n                        curve=\"monotoneX\"\r\n                        lineWidth={4}\r\n                        colors={['rgb(211,47,47)']}\r\n                        axisTop={null}\r\n                        axisBottom={null}\r\n                        axisRight={getAxis2()}\r\n                        axisLeft={null}\r\n                        enablePoints={false}\r\n                        enableGridX={false}\r\n                        enableGridY={false}\r\n                        useMesh={true}\r\n                        // enableSlices=\"y\"\r\n                        crosshairType=\"cross\"\r\n                    />\r\n                ) : (\r\n                    <Alert severity=\"info\">Not enough data yet to show graphs - check again later</Alert>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TimelineView from \"../components/TimelineView\";\r\nimport StatusView from \"../components/StatusView\";\r\nimport LineChart from '../components/LineChart';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\nimport { FiatContext } from '../context/FiatContext';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { ServerContext } from '../context/ServerContext';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { socket } from '../context/SocketContext';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport DMSwitch from '@material-ui/core/Switch';\r\nimport Button from '@material-ui/core/Button';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    '&:click': {\r\n      backgroundColor: '#f00',\r\n    },\r\n    justifyContent: 'flex-start',\r\n  },\r\n})(Button);\r\n\r\nconst Performance = () => {\r\n  const classes = useStyles();\r\n\r\n  const balances = useContext(BalancesContext)[0];\r\n  const performance = useContext(PerformanceContext)[0];\r\n  const startingBalance = useContext(StartingBalanceContext)[0];\r\n  const fiat = useContext(FiatContext)[0];\r\n  const configuration = useContext(ConfigurationContext)[0];\r\n  const [data1, setData1] = useState({});\r\n  const [data2, setData2] = useState({});\r\n  const { access } = useContext(ServerContext)[0];\r\n  const [open, setOpen] = useState(true);\r\n  const [graph, setGraph] = useState('normalized');\r\n\r\n  const toggleGraph = () => {\r\n    const newgraph = graph === 'normalized' ? 'absolute' : 'normalized';\r\n    setGraph(newgraph);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (socket && startingBalance.length === 0 && access.allow) socket.emit(\"get-starting-balances\", access.token);\r\n    return () => {\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setOpen(Object.keys(balances).length === 0);\r\n    return () => {\r\n    }\r\n  }, [balances]);\r\n\r\n  let values = [];\r\n  let fiatValues = [];\r\n  let change = [];\r\n  let fiatChange = [];\r\n  let valuesNorm = [];\r\n  let fiatValuesNorm = [];\r\n  let changeNorm = [];\r\n  let fiatChangeNorm = [];\r\n  let netvalues = [];\r\n  let netchange = [];\r\n  let netvaluesfiat = [];\r\n  let netchangefiat = [];\r\n  let newdata1 = {};\r\n  let newdata2 = {};\r\n\r\n  useEffect(() => {\r\n    computeGraphs();\r\n\r\n    return () => {\r\n    }\r\n  }, [balances, performance, startingBalance, fiat]);\r\n\r\n  const getPerf = (day, normalize) => {\r\n    let value = 0;\r\n    let fiatValue = 0;\r\n\r\n    let multiplier;\r\n\r\n    if (configuration.basecoin === 'BTC') {\r\n      multiplier = ((fiat === 'EUR') ? day.eur : day.usd);\r\n    } else if (configuration.basecoin === 'BUSD' || configuration.basecoin === 'USDT' || configuration.basecoin === 'USDC') {\r\n      multiplier = ((fiat === 'EUR') ? day.eur / day.usd : 1);\r\n    } else if (configuration.basecoin === 'EUR') {\r\n      multiplier = ((fiat === 'EUR') ? 1 : day.usd / day.eur);\r\n    }\r\n\r\n    day.coins.forEach((coin) => {\r\n      value += coin.number * coin.price;\r\n      fiatValue += coin.number * coin.price * multiplier;\r\n    });\r\n\r\n    if (normalize) {\r\n      value += day.offset;\r\n      fiatValue += day.offset * multiplier;\r\n    }\r\n\r\n    return [value, fiatValue];\r\n  }\r\n\r\n  const computeGraphs = () => {\r\n    let initialValue = 0;\r\n    let initialFiatValue = 0;\r\n    let initialValueNorm = 0;\r\n    let initialFiatValueNorm = 0;\r\n\r\n    if (startingBalance.length !== 0 && startingBalance.coins.length !== 0) {\r\n      initialValue = startingBalance.basecoin;\r\n      initialFiatValue = (fiat === 'EUR') ? startingBalance.eur : startingBalance.usd;\r\n\r\n      if (performance.length !== 0) {\r\n        performance.forEach((day, i) => {\r\n          const [value, fiatValue] = getPerf(day, false);\r\n          const [valueNorm, fiatValueNorm] = getPerf(day, true);;\r\n\r\n          if (i === 0) {\r\n            initialValueNorm = valueNorm;\r\n            initialFiatValueNorm = fiatValueNorm;\r\n          }\r\n\r\n          let netvalue = 0;\r\n          let netvaluefiat = 0;\r\n\r\n          day.coins.forEach((coin) => {\r\n            // Old performance files may have coins on day 0 that were added later, and don't get an initial value\r\n            if (!coin.initial) coin.initial = 0;\r\n            // Old performance files may have coins with number = 0, and then netvalue shouldn't be impacted\r\n            // Could also happen when multiple bots track the same portfolio, and a coin is excluded in one, but not the other(s)\r\n            if (coin.number !== 0) netvalue += (coin.number - coin.initial) * coin.price;\r\n          });\r\n          netvalue += day.netoffset;\r\n\r\n          if (configuration.basecoin === 'BTC') {\r\n            netvaluefiat = netvalue * ((fiat === 'EUR') ? day.eur : day.usd);\r\n          } else if (configuration.basecoin === 'BUSD' || configuration.basecoin === 'USDT' || configuration.basecoin === 'USDC') {\r\n            netvaluefiat = netvalue * ((fiat === 'EUR') ? day.eur / day.usd : 1);\r\n          } else if (configuration.basecoin === 'EUR') {\r\n            netvaluefiat = netvalue * ((fiat === 'EUR') ? 1 : day.usd / day.eur);\r\n          }\r\n\r\n          values.push({\r\n            x: day.date,\r\n            y: value,\r\n          });\r\n          change.push({\r\n            x: day.date,\r\n            y: (value / initialValue - 1) * 100,\r\n          });\r\n          fiatValues.push({\r\n            x: day.date,\r\n            y: fiatValue,\r\n          });\r\n          fiatChange.push({\r\n            x: day.date,\r\n            y: (fiatValue / initialFiatValue - 1) * 100,\r\n          });\r\n          valuesNorm.push({\r\n            x: day.date,\r\n            y: valueNorm,\r\n          });\r\n          changeNorm.push({\r\n            x: day.date,\r\n            y: (valueNorm / initialValueNorm - 1) * 100,\r\n          });\r\n          fiatValuesNorm.push({\r\n            x: day.date,\r\n            y: fiatValueNorm,\r\n          });\r\n          fiatChangeNorm.push({\r\n            x: day.date,\r\n            y: (fiatValueNorm / initialFiatValueNorm - 1) * 100,\r\n          });\r\n          netvalues.push({\r\n            x: day.date,\r\n            y: netvalue,\r\n          });\r\n          netchange.push({\r\n            x: day.date,\r\n            y: (netvalue / initialValue) * 100,\r\n          });\r\n          netvaluesfiat.push({\r\n            x: day.date,\r\n            y: netvaluefiat,\r\n          });\r\n          netchangefiat.push({\r\n            x: day.date,\r\n            y: (netvaluefiat / initialFiatValue) * 100,\r\n          });\r\n        });\r\n\r\n        newdata1.basecoin = [\r\n          {\r\n            id: `Total Value (${configuration.basecoin})`,\r\n            data: values,\r\n          }\r\n        ];\r\n        newdata2.basecoin = [\r\n          {\r\n            id: `${configuration.basecoin} Change (%)`,\r\n            data: change,\r\n          }\r\n        ];\r\n        newdata1.fiat = [\r\n          {\r\n            id: `Total Value (${fiat})`,\r\n            data: fiatValues,\r\n          }\r\n        ];\r\n        newdata2.fiat = [\r\n          {\r\n            id: `${fiat} Change (%)`,\r\n            data: fiatChange,\r\n          }\r\n        ];\r\n        newdata1.basecoinnorm = [\r\n          {\r\n            id: `Normalized Value (${configuration.basecoin})`,\r\n            data: valuesNorm,\r\n          }\r\n        ];\r\n        newdata2.basecoinnorm = [\r\n          {\r\n            id: `Normalized ${configuration.basecoin} Change (%)`,\r\n            data: changeNorm,\r\n          }\r\n        ];\r\n        newdata1.fiatnorm = [\r\n          {\r\n            id: `Normalized Value (${fiat})`,\r\n            data: fiatValuesNorm,\r\n          }\r\n        ];\r\n        newdata2.fiatnorm = [\r\n          {\r\n            id: `Normalized ${fiat} Change (%)`,\r\n            data: fiatChangeNorm,\r\n          }\r\n        ];\r\n        newdata1.net = [\r\n          {\r\n            id: `Net Balancing Effect (${configuration.basecoin})`,\r\n            data: netvalues,\r\n          }\r\n        ];\r\n        newdata2.net = [\r\n          {\r\n            id: 'Net Balancing Effect (%)',\r\n            data: netchange,\r\n          }\r\n        ];\r\n        newdata1.netfiat = [\r\n          {\r\n            id: `Net Balancing Effect (${fiat})`,\r\n            data: netvaluesfiat,\r\n          }\r\n        ];\r\n        newdata2.netfiat = [\r\n          {\r\n            id: 'Net Balancing Effect (%)',\r\n            data: netchangefiat,\r\n          }\r\n        ];\r\n        setData1(newdata1);\r\n        setData2(newdata2);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Backdrop className={classes.backdrop} open={open}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4} lg={6}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Performance\r\n          </Typography>\r\n        </Grid>\r\n        <Hidden xsDown>\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TimelineView data={performance} />\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid container item xs={12} alignItems=\"center\" justify=\"flex-end\" style={{ maxWidth: '220px' }}>\r\n            <Grid item xs={8}>\r\n              <FormControlLabel\r\n                onChange={toggleGraph}\r\n                value={graph}\r\n                control={<DMSwitch checked={graph === 'normalized'} color=\"secondary\" />}\r\n                label={<Typography variant=\"button\">Absolute</Typography>}\r\n                labelPlacement=\"start\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <StyledButton disableRipple onClick={toggleGraph}><Typography variant=\"button\">Normalized</Typography></StyledButton>\r\n            </Grid>\r\n            <Grid item xs={2}></Grid>\r\n          </Grid>\r\n          <Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {(graph === 'absolute') ? (\r\n          <React.Fragment>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n              <Paper style={{ height: '360px' }} className={classes.paper}>\r\n                <LineChart data1={data1.basecoin} data2={data1.basecoin} type={'basecoin'} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n              <Paper style={{ height: '360px' }} className={classes.paper}>\r\n                <LineChart data1={data1.fiat} data2={data1.fiat} type={'fiat'} />\r\n              </Paper>\r\n            </Grid>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n              <Paper style={{ height: '360px' }} className={classes.paper}>\r\n                <LineChart data1={data2.basecoinnorm} data2={data2.basecoinnorm} type={'basecoin'} />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n              <Paper style={{ height: '360px' }} className={classes.paper}>\r\n                <LineChart data1={data2.fiatnorm} data2={data2.fiatnorm} type={'fiat'} />\r\n              </Paper>\r\n            </Grid>\r\n          </React.Fragment>\r\n        )}\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <Paper style={{ height: '360px' }} className={classes.paper}>\r\n            <LineChart data1={data1.net} data2={data2.net} type={'net-result'} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6} lg={6}>\r\n          <Paper style={{ height: '360px' }} className={classes.paper}>\r\n            <LineChart data1={data1.netfiat} data2={data2.netfiat} type={'net-result-fiat'} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Performance;","import { useContext } from 'react';\r\nimport { ResponsiveLine } from '@nivo/line'\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\n\r\nexport default function LineChart(props) {\r\n    const mode = useTheme().palette.type;\r\n    const configuration = useContext(ConfigurationContext)[0];\r\n\r\n    let performance = props.performance;\r\n    const balances = props.balances;\r\n    const rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n\r\n    // Sort alphabetically on coin names\r\n    rows.sort((a, b) => (a['coin'] < b['coin']) ? 1 : ((b['coin'] < a['coin']) ? -1 : 0));\r\n\r\n    let coins = [];\r\n    let data = [];\r\n    let prices = [];\r\n\r\n    rows.forEach((coin, i) => {\r\n        coins.push(coin.coin);\r\n        prices[i] = {\r\n            coin: coin.coin,\r\n            initial: 0,\r\n            data: [],\r\n        };\r\n    });\r\n\r\n    if (performance !== []) {\r\n        coins.forEach((coin, i) => {\r\n            if (coin !== configuration.basecoin) {\r\n                performance.forEach((day) => {\r\n                    day.coins.forEach((c) => {\r\n                        if (c.coin === coin) {\r\n                            if (prices[i].initial === 0) prices[i].initial = c.price;\r\n                            prices[i].data.push({\r\n                                x: day.date,\r\n                                y: (c.price / prices[i].initial - 1) * 100,\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                data.push({\r\n                    id: coin,\r\n                    data: prices[i].data,\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    let enoughData = false;\r\n    if (data.length !== 0 && data[0].data.length > 1) enoughData = true;\r\n\r\n    const getTheme = () => {\r\n        return {\r\n            axis: {\r\n                ticks: {\r\n                    line: {\r\n                        stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    },\r\n                    text: { fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\" }\r\n                },\r\n                legend: {\r\n                    text: {\r\n                        fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\"\r\n                    }\r\n                }\r\n            },\r\n            crosshair: {\r\n                line: {\r\n                    stroke: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                },\r\n            },\r\n            legends: {\r\n                text: {\r\n                    fill: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n                }\r\n            },\r\n            // tooltip: {\r\n            //     container: {\r\n            //         background: (mode === 'light') ? \"#FFFFFF\" : \"#000000\",\r\n            //         color: (mode === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n            //     }\r\n            // }\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div><b>{props.title}</b></div>\r\n            <div className=\"graphContainerCoins\">\r\n                {(enoughData) ? (\r\n                    <ResponsiveLine\r\n                        data={data}\r\n                        tooltip={(input) => {\r\n                            return (\r\n                                <div style={{\r\n                                    background: (mode === 'light') ? \"#FFFFFF\" : \"#000000\",\r\n                                    boxShadow: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\r\n                                    padding: '6px 10px 6px 10px'\r\n                                }}>\r\n                                    <span style={{ color: input.point.color }}>\r\n                                        ▉ {input.point.serieId}:&nbsp;\r\n                                    </span>\r\n                                    <span style={{ color: (mode === 'light') ? \"#000000\" : \"#FFFFFF\" }}>\r\n                                        {input.point.data.xFormatted} | <strong>{input.point.data.yFormatted}</strong>%\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        }}\r\n                        theme={getTheme()}\r\n                        margin={{ top: 50, right: 110, bottom: 50, left: 80 }}\r\n                        xScale={{\r\n                            type: 'time',\r\n                            format: '%Y/%m/%d',\r\n                            useUTC: false,\r\n                            precision: 'day',\r\n                        }}\r\n                        xFormat=\"time:%Y/%m/%d\"\r\n                        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n                        yFormat=\" >-.2f\"\r\n                        curve=\"monotoneX\"\r\n                        lineWidth={4}\r\n                        colors={{ scheme: 'red_yellow_blue' }}\r\n                        axisTop={null}\r\n                        axisRight={{\r\n                            legend: '',\r\n                            legendOffset: 70,\r\n                            legendPosition: 'middle',\r\n                        }}\r\n                        axisBottom={null}\r\n                        axisLeft={{\r\n                            legend: 'Change (%)',\r\n                            legendOffset: -70,\r\n                            legendPosition: 'middle',\r\n                        }}\r\n                        enablePoints={false}\r\n                        enableGridX={false}\r\n                        enableGridY={false}\r\n                        useMesh={true}\r\n                        // enableSlices=\"y\"\r\n                        crosshairType=\"cross\"\r\n                        legends={[\r\n                            {\r\n                                anchor: 'bottom-right',\r\n                                direction: 'column',\r\n                                justify: false,\r\n                                translateX: 120,\r\n                                translateY: 0,\r\n                                itemsSpacing: 0,\r\n                                itemDirection: 'left-to-right',\r\n                                itemWidth: 80,\r\n                                itemHeight: 20,\r\n                                itemOpacity: 0.75,\r\n                                symbolSize: 12,\r\n                                symbolShape: 'circle',\r\n                                symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                                itemTextColor: \"#ff0000\",\r\n                                effects: [\r\n                                    {\r\n                                        on: 'hover',\r\n                                        style: {\r\n                                            itemBackground: 'rgba(0, 0, 0, .03)',\r\n                                            itemOpacity: 1\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}\r\n                    />\r\n                ) : (\r\n                    <Alert severity=\"info\">Not enough data yet to show graphs - check again later</Alert>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TimelineView from \"../components/TimelineView\";\r\nimport StatusView from \"../components/StatusView\";\r\nimport LineChartCoins from '../components/LineChartCoins';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst CoinAnalysis = () => {\r\n  const classes = useStyles();\r\n\r\n  const balances = useContext(BalancesContext)[0];\r\n  const performance = useContext(PerformanceContext)[0];\r\n  const configuration = useContext(ConfigurationContext)[0];\r\n  const [open, setOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setOpen(Object.keys(balances).length === 0);\r\n    return () => {\r\n    }\r\n  }, [balances]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Backdrop className={classes.backdrop} open={open}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4} lg={6}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Coin Analysis\r\n          </Typography>\r\n        </Grid>\r\n        <Hidden xsDown>\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TimelineView data={performance} />\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper style={{ height: '700px' }} className={classes.paper}>\r\n            <LineChartCoins performance={performance} balances={balances} title={`Coin ${configuration.basecoin} Price Changes (%)`} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CoinAnalysis;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { socket } from '../context/SocketContext';\r\nimport { ServerContext } from '../context/ServerContext';\r\nimport { useLocalStore } from \"../services/LocalStoreService\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n    // table: {\r\n    //     minWidth: 700,\r\n    // },\r\n    errortext: {\r\n        color: \"#ff0000\",\r\n    },\r\n}));\r\n\r\nexport default function HistoryTable() {\r\n    const classes = useStyles();\r\n    const { access } = useContext(ServerContext)[0];\r\n    const [mode, setMode] = useLocalStore('mode', 'light');\r\n    const [openDelete, setOpenDelete] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    let [eventdata, setEventdata] = useState({\r\n        rows: [],\r\n        total: 0,\r\n    });\r\n\r\n    let [filter, setFilter] = useState({\r\n        type: ['order', 'event'],\r\n        event: '',\r\n        page: '1',\r\n    });\r\n\r\n    let [history, setHistory] = useState({\r\n        logs: [],\r\n        total: 0,\r\n    });\r\n\r\n    const handleHistoryChange = (hist) => {\r\n        let rows = []\r\n        hist.logs.reverse().forEach((log) => {\r\n            if (log.type !== 'order') log.type = 'event';\r\n            rows.push({\r\n                time: log.time,\r\n                type: log.type,\r\n                event: log.event,\r\n            });\r\n        });\r\n        setEventdata({\r\n            rows: rows,\r\n            total: hist.total,\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleHistoryChange(history);\r\n\r\n        return () => {\r\n        }\r\n    }, [history]);\r\n\r\n    const handleEvent = (log, summary) => {\r\n        if (socket && access.allow) socket.emit(\"get-logs\", filter, access.token);\r\n    };\r\n\r\n    const handleDeleteAlerts = () => {\r\n        if (socket && access.allow) socket.emit(\"delete-alerts\", filter, access.token);\r\n        setOpenDelete(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on(\"event-history\", (data) => {\r\n            data.logs.forEach((log) => {\r\n                if (log.type !== 'order') log.type = 'event';\r\n            });\r\n            setHistory({\r\n                logs: data.logs,\r\n                total: data.total,\r\n            });\r\n        });\r\n        socket.on(\"event\", function (data) {\r\n            if (data.log.type !== 'order') data.log.type = 'event';\r\n            handleEvent(data.log, data.summary);\r\n        });\r\n\r\n        return () => {\r\n            socket.off(\"event-history\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (socket && access.allow) socket.emit(\"get-logs\", filter, access.token);\r\n\r\n        return () => {\r\n        }\r\n    }, [filter]);\r\n\r\n    const handlePage = (event, newPage) => {\r\n        setCurrentPage(newPage);\r\n        setFilter({\r\n            type: filter.type,\r\n            event: filter.event,\r\n            page: newPage,\r\n        });\r\n    };\r\n\r\n    const handleTypeFilter = (event, newTypes) => {\r\n        setCurrentPage(1);\r\n        setFilter({\r\n            type: newTypes,\r\n            event: filter.event,\r\n            page: 1,\r\n            // page: filter.page,\r\n        });\r\n    };\r\n\r\n    const handleEventFilter = (e) => {\r\n        setCurrentPage(1);\r\n        setFilter({\r\n            type: filter.type,\r\n            event: e.target.value,\r\n            page: 1,\r\n            // page: filter.page,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Paper pt={2}>\r\n            <Dialog open={openDelete} onClose={() => setOpenDelete(false)}>\r\n                <DialogTitle>Confirm Delete</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography color=\"textPrimary\">\r\n                            Warning: all alerts will be deleted, but all orders will be kept. This change cannot be reverted\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" onClick={() => setOpenDelete(false)} color={(mode === 'light') ? \"primary\" : \"secondary\"}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={handleDeleteAlerts} color={(mode === 'light') ? \"primary\" : \"secondary\"}>\r\n                        Delete Alerts\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Grid container style={{ height: '60px' }} alignItems=\"center\" justify=\"space-between\">\r\n                <Grid container item xs={8}>\r\n                    <Box pl={1} pr={1} pt={3}>\r\n                        <Grid item xs={5}>\r\n                            <ToggleButtonGroup value={filter.type} onChange={handleTypeFilter} aria-label=\"type selection\">\r\n                                <ToggleButton value=\"order\" aria-label=\"order\" style={{ height: '30px' }} >\r\n                                    <Typography variant=\"overline\" noWrap>\r\n                                        Orders\r\n                                    </Typography>\r\n                                </ToggleButton>\r\n                                <ToggleButton value=\"event\" aria-label=\"event\" style={{ height: '30px' }} >\r\n                                    <Typography variant=\"overline\" noWrap>\r\n                                        Alerts\r\n                                    </Typography>\r\n                                </ToggleButton>\r\n                            </ToggleButtonGroup>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Grid item xs={4}>\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <TextField id=\"event-filter\" label=\"Filter events\" color=\"secondary\" onChange={handleEventFilter} />\r\n                        </form>\r\n                    </Grid>\r\n                    <Grid item xs={3}></Grid>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <Hidden xsDown>\r\n                        <Box pr={1} pt={1} display=\"flex\" justifyContent=\"flex-end\">\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => setOpenDelete(true)}>\r\n                                Delete Alerts\r\n                            </Button>\r\n                        </Box>\r\n                    </Hidden>\r\n                </Grid>\r\n            </Grid>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} size=\"small\" aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell style={{ width: '170px' }}>Time</StyledTableCell>\r\n                            <StyledTableCell>Event</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {eventdata.rows.map((row, i) => (\r\n                            <StyledTableRow key={i}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    <Typography variant=\"caption\">{row.time}</Typography>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>\r\n                                    {(row.type === 'event') ? (\r\n                                        <Typography variant=\"body2\" className={classes.errortext}>{row.event}</Typography>\r\n                                    ) : (\r\n                                        <Typography variant=\"body2\">{row.event}</Typography>\r\n                                    )}\r\n                                </StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\" >\r\n                <Pagination page={currentPage} count={Math.ceil(eventdata.total / 20)} shape=\"rounded\" onChange={handlePage} />\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HistoryTable from \"../components/HistoryTable\";\r\nimport StatusView from '../components/StatusView';\r\nimport TimelineView from \"../components/TimelineView\";\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst EventHistory = (props) => {\r\n  const classes = useStyles();\r\n  const performance = useContext(PerformanceContext)[0];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4} lg={6}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Event History\r\n          </Typography>\r\n        </Grid>\r\n        <Hidden xsDown>\r\n          <Grid item xs={12} sm={6} md={4} lg={3}>\r\n            <TimelineView data={performance} />\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n          <StatusView />\r\n        </Grid>\r\n        <Grid item xs={12} lg={9}>\r\n          <HistoryTable />\r\n        </Grid>\r\n        <Grid item xs={0} lg={3}>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nexport default EventHistory;\r\n","import React, { useState, createContext } from 'react';\r\n\r\nexport const ConfigurationInputContext = createContext();\r\n\r\nexport const ConfigurationInputProvider = (props) => {\r\n    const [configurationInput, setConfigurationInput] = useState({});\r\n\r\n    return (\r\n        <ConfigurationInputContext.Provider value={[configurationInput, setConfigurationInput]}>\r\n            {props.children}\r\n        </ConfigurationInputContext.Provider>\r\n    )\r\n}","import { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport const HtmlTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: (theme.palette.type === 'light') ? \"#FFFFFF\" : \"#000000\",\r\n        color: (theme.palette.type === 'light') ? \"#000000\" : \"#FFFFFF\",\r\n        maxWidth: 800,\r\n        fontSize: theme.typography.pxToRem(14),\r\n        border: '1px solid #888888',\r\n    },\r\n}))(Tooltip);","import React, { useState, useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { HtmlTooltip } from './HtmlToolTip';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Box from '@material-ui/core/Box';\r\nimport Link from '@material-ui/core/Link';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\n\r\nexport default function ConfigP1(props) {\r\n    const mode = useTheme().palette.type;\r\n\r\n    const [input, setInput] = useContext(ConfigurationInputContext);\r\n    const [apiKey, setApiKey] = useState(input.apiKey || '');\r\n    const [apiSecret, setApiSecret] = useState(input.apiSecret || '');\r\n\r\n    const onInput = (e) => {\r\n        props.callback({\r\n            field: e.target.id,\r\n            input: e.target.value\r\n        });\r\n\r\n        if (e.target.id === 'apiKey') setApiKey(e.target.value);\r\n        if (e.target.id === 'apiSecret') setApiSecret(e.target.value);\r\n    }\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleTooltipClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleTooltipOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems=\"flex-end\">\r\n                <Grid item xs={11}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Exchange API Details\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <ClickAwayListener onClickAway={handleTooltipClose}>\r\n                        <HtmlTooltip\r\n                            mode={mode}\r\n                            title={\r\n                                <React.Fragment>\r\n                                    <Box m={2}>\r\n                                        {\"If you haven't done so already, logon to your exchange, go to API Management and create a new API key. \"}<b>{\"Make sure the API key is enabled for spot trading\"}</b>{\". Then enter the API key and API secret here.\"}\r\n                                        <div>&nbsp;</div>\r\n                                        {\"Also, \"}<b>{\"make sure your server's IP address is added to the API key's IP whitelist (if enabled)\"}</b>{\". You can find the IP whitelist under API Management, where you've created your API key. If you run Balance Bot on your PC, then use the IP address of your internet connection, which you can find e.g. here \"}<Link href=\"https://www.whatsmyip.org/\" target=\"_blank\" rel=\"noopener\" color=\"secondary\">www.whatsmyip.org</Link>{\". If you run Balance Bot in the cloud, then use the IP address of your cloud server.\"}\r\n                                        <div>&nbsp;</div>\r\n                                        <div><i>{\"Note: \"}</i>{\"you only need to enter the API details once, as they will be stored on the server for later use. If you want to change the configuration settings at a later point, you can just click the Next button and reuse the API details that you've already configured previously. If you want to change to a different API key, you can entering the new details here.\"}</div>\r\n                                    </Box>\r\n                                </React.Fragment>\r\n                            }\r\n                            onClose={handleTooltipClose}\r\n                            open={open}\r\n                            disableFocusListener\r\n                            disableHoverListener\r\n                            disableTouchListener\r\n                            interactive\r\n                        >\r\n                            <IconButton onClick={open ? handleTooltipClose : handleTooltipOpen}>\r\n                                <InfoOutlinedIcon color=\"secondary\" />\r\n                            </IconButton>\r\n                        </HtmlTooltip>\r\n                    </ClickAwayListener>\r\n                </Grid>\r\n            </Grid>\r\n            <form style={{ minWidth: '100%' }}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"apiKey\"\r\n                            name=\"apiKey\"\r\n                            label=\"API Key\"\r\n                            type=\"password\"\r\n                            value={apiKey}\r\n                            onChange={onInput}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            required\r\n                            id=\"apiSecret\"\r\n                            name=\"apiSecret\"\r\n                            label=\"API Secret\"\r\n                            type=\"password\"\r\n                            value={apiSecret}\r\n                            onChange={onInput}\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            <Grid item xs={12}>\r\n                <Box m={4}></Box>\r\n                <Box m={0}>\r\n                    <Typography variant=\"overline\" color=\"secondary\">\r\n                        &gt; Make sure your API key is enabled for spot trading\r\n                    </Typography>\r\n                </Box>\r\n                <Box m={0}>\r\n                    <Typography variant=\"overline\" color=\"secondary\">\r\n                        &gt; Make sure your server's IP address is added to the API key's IP whitelist (if enabled)\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState, createContext } from 'react';\r\n\r\nexport const CoinContext = createContext();\r\n\r\nexport const CoinProvider = (props) => {\r\n    const [basecoins, setBasecoins] = useState([]);\r\n\r\n    return (\r\n        <CoinContext.Provider value={[basecoins, setBasecoins]}>\r\n            {props.children}\r\n        </CoinContext.Provider>\r\n    )\r\n}","import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { withStyles, makeStyles, lighten } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport { CoinContext } from '../context/CoinContext';\r\nimport { ServerContext } from '../context/ServerContext';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { HtmlTooltip } from './HtmlToolTip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Input from '@material-ui/core/Input';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useLocalStore } from \"../services/LocalStoreService\";\r\nimport { socket } from '../context/SocketContext';\r\n\r\nconst iOSBoxShadow =\r\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\r\n\r\nconst MySlider = withStyles({\r\n    root: {\r\n        height: 2,\r\n        padding: '15px 0',\r\n    },\r\n    thumb: {\r\n        height: 28,\r\n        width: 28,\r\n        boxShadow: iOSBoxShadow,\r\n        marginTop: -14,\r\n        marginLeft: -14,\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\r\n            // Reset on touch devices, it doesn't add specificity\r\n            '@media (hover: none)': {\r\n                boxShadow: iOSBoxShadow,\r\n            },\r\n        },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n        left: 'calc(-50% + 12px)',\r\n        top: 9,\r\n        '& *': {\r\n            background: 'transparent',\r\n            color: '#FFFFFF',\r\n        },\r\n    },\r\n    track: {\r\n        height: 3,\r\n    },\r\n    rail: {\r\n        height: 2,\r\n        opacity: 0.5,\r\n        backgroundColor: 'secondary',\r\n    },\r\n    mark: {\r\n        backgroundColor: 'secondary',\r\n        height: 8,\r\n        width: 1,\r\n        marginTop: -3,\r\n    },\r\n    markActive: {\r\n        opacity: 1,\r\n        backgroundColor: 'currentColor',\r\n    },\r\n})(Slider);\r\n\r\nconst headCells = [\r\n    { id: 'coin', align: 'left', disablePadding: true, label: 'Coin' },\r\n    { id: 'change', align: 'center', disablePadding: false, label: 'Distribution Weight' },\r\n    { id: 'targetdistribution', align: 'left', disablePadding: true, label: 'Target Distribution' },\r\n    { id: 'currentdistribution', align: 'left', disablePadding: true, label: 'Current Distribution' },\r\n    { id: 'offset', align: 'right', disablePadding: true, label: 'Coin Offset' },\r\n    { id: 'notifications', align: 'left', disablePadding: false, label: '' },\r\n    { id: 'delete', align: 'right', disablePadding: false, label: '' },\r\n];\r\n\r\nconst marks = [\r\n    {\r\n        value: -1,\r\n        label: '',\r\n    },\r\n    {\r\n        value: 100,\r\n        label: '',\r\n    },\r\n];\r\n\r\nconst useTableHeadStyles = makeStyles((theme) => ({\r\n    headcolor:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                backgroundColor: '#aaaaaa',\r\n            }\r\n            : {\r\n                backgroundColor: '#777777',\r\n            },\r\n    headheight: {\r\n        height: 44,\r\n    },\r\n}));\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { onSelectAllClick, numSelected, rowCount } = props;\r\n    const classes = useTableHeadStyles();\r\n\r\n    let checkbox;\r\n    checkbox = <Checkbox\r\n        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n        checked={rowCount > 0 && numSelected === rowCount}\r\n        onChange={onSelectAllClick}\r\n        inputProps={{ 'aria-label': 'select coins' }}\r\n    />\r\n    return (\r\n        <TableHead>\r\n            <TableRow className={`${classes.headcolor} ${classes.headheight}`}>\r\n                <TableCell padding=\"checkbox\">\r\n                    {checkbox}\r\n                </TableCell>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.align}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                    >\r\n                        <TableSortLabel>\r\n                            {headCell.label}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    numSelected: PropTypes.number.isRequired,\r\n    onSelectAllClick: PropTypes.func.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1),\r\n        maxWidth: 960,\r\n        minWidth: 960,\r\n    },\r\n    highlight:\r\n        theme.palette.type === 'light'\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark,\r\n            },\r\n    title: {\r\n        flex: '1 1 100%',\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { selected, portfolio, setSelected } = props;\r\n    const numSelected = selected.length;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n                    {(numSelected === 1) ? 'Coin' : 'Coins'} <i>excluded</i> from balancing: {selected.join(', ')}\r\n                </Typography>\r\n            ) : (\r\n                <Typography className={classes.title} variant=\"subtitle1\" id=\"tableTitle\" component=\"div\">\r\n                    Set target distribution and (optionally) select coins to be <i>excluded</i> from balancing\r\n                </Typography>\r\n            )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    selected: PropTypes.array.isRequired,\r\n    portfolio: PropTypes.array.isRequired,\r\n    setSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    paper: {\r\n        width: '800px',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    table: {\r\n        maxWidth: 960,\r\n        minWidth: 960,\r\n        \"& .MuiTableCell-sizeSmall\": {\r\n            paddingTop: \"6px\",\r\n            paddingBottom: \"0px\",\r\n        },\r\n    },\r\n    cell: {\r\n        width: 50,\r\n    },\r\n    cell2: {\r\n        width: 120,\r\n    },\r\n    textinput: {\r\n        width: '380px',\r\n    },\r\n    textinput2: {\r\n        width: '120px',\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: 'rect(0 0 0 0)',\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: 'hidden',\r\n        padding: 0,\r\n        position: 'absolute',\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.white,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 12,\r\n    },\r\n}))(Tooltip);\r\n\r\nexport default function ConfigP2(props) {\r\n    const classes = useStyles();\r\n\r\n    const sort = (pf) => {\r\n        return pf.sort((a, b) => (a.coin > b.coin) ? 1 : ((b.coin > a.coin) ? -1 : 0));\r\n    }\r\n\r\n    const [basecoins, setBasecoins] = useContext(CoinContext);\r\n    const configuration = useContext(ConfigurationContext)[0];\r\n    const [input, setInput] = useContext(ConfigurationInputContext);\r\n    const newPortfolio = (input.portfolio) ? sort(input.portfolio) : [];\r\n    const [portfolio, setPortfolio] = useState(newPortfolio);\r\n    const [portfolioReceived, setPortfolioReceived] = useState(false);\r\n    const [coinsReceived, setCoinsReceived] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [basecoin, setBasecoin] = useState(input.basecoin);\r\n    const { access } = useContext(ServerContext)[0];\r\n    const initialOffset = useRef([]);\r\n    const [openDelete, setOpenDelete] = useState(false);\r\n    const [deleteCoin, setDeleteCoin] = useState('');\r\n    const excludedChangeRef = useRef(input.excludedChange || []);\r\n    const mode = useLocalStore('mode', 'light')[0];\r\n\r\n    const precision = 3;\r\n\r\n    const onInput = (data) => {\r\n        props.callback({\r\n            field: 'portfolio',\r\n            input: data,\r\n        });\r\n    }\r\n\r\n    const onBasecoin = (e) => {\r\n        // Reset sliders and excludes if basecoin is changed\r\n        if (input.basecoin !== '') resetPortfolio();\r\n\r\n        props.callback({\r\n            field: e.target.name,\r\n            input: e.target.value\r\n        });\r\n\r\n        setBasecoin(e.target.value);\r\n\r\n        setPortfolioReceived(false);\r\n        getPortfolio();\r\n    }\r\n\r\n    const getPortfolio = () => {\r\n        if (socket && access.allow) socket.emit(\"get-portfolio\", {\r\n            apiKey: input.apiKey,\r\n            apiSecret: input.apiSecret,\r\n            basecoin: input.basecoin,\r\n        }, access.token);\r\n    }\r\n\r\n    useEffect(() => {\r\n        let newSelected = [];\r\n        newPortfolio.forEach((coin) => {\r\n            if (coin.excluded) newSelected.push(coin.coin);\r\n        });\r\n        setSelected(newSelected);\r\n\r\n        if (input.basecoin !== '') setBasecoins([input.basecoin]);\r\n\r\n        socket.on(\"portfolio\", data => {\r\n            data = sort(data);\r\n            // Upon initial configuration, basecoin needs to be set\r\n            if (input.basecoin === '' && input.apiKey !== '************' && input.apiSecret !== '************') {\r\n                let base = [];\r\n                let usercoins = [];\r\n                let options = ['BTC', 'BUSD', 'USDT', 'USDC', 'EUR'];\r\n\r\n                data.forEach((coin) => {\r\n                    usercoins.push(coin.coin);\r\n                });\r\n\r\n                base = options.filter((coin) => {\r\n                    return (usercoins.includes(coin));\r\n                });\r\n\r\n                setBasecoins(base);\r\n                setCoinsReceived(true);\r\n            } else {\r\n                // data is false if the API key or secret are invalid, or if the server's IP address is not whitelisted on Binance\r\n                if (data !== false) {\r\n                    const numCoins = data.length;\r\n                    data.forEach((coin) => {\r\n                        // Check if coin was already in portfolio or is newly added to account\r\n                        const match = input.portfolio.find(c => c.coin === coin.coin);\r\n                        if (!match) {\r\n                            coin.offset = 0;\r\n                            // On initial configuration, don't exclude coins\r\n                            if (input.portfolio.length !== 0) {\r\n                                coin.slider = -1;\r\n                                coin.distribution = 0;\r\n                                coin.excluded = true;\r\n                                setSelected(prevState => [...prevState, coin.coin]);\r\n                            } else {\r\n                                coin.slider = -1;\r\n                                coin.distribution = (100 / numCoins).toFixed(precision);\r\n                                coin.excluded = false;\r\n                            }\r\n                        } else {\r\n                            // Keep previously set attributes\r\n                            coin.offset = match.offset || 0;\r\n                            coin.slider = match.slider;\r\n                            coin.distribution = match.distribution;\r\n                            coin.excluded = match.excluded;\r\n                        }\r\n                        // Store initial offset\r\n                        initialOffset.current.push({\r\n                            coin: coin.coin,\r\n                            offset: coin.offset\r\n                        });\r\n                    });\r\n\r\n                    data = updateCurrentDistribution(data);\r\n                    setPortfolioReceived(true);\r\n                    setPortfolio(data);\r\n                    onInput(data);\r\n                }\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.off(\"portfolio\");\r\n        }\r\n    }, []);\r\n\r\n    const updateCurrentDistribution = (data) => {\r\n        let totalValue = 0;\r\n        data.forEach((c) => {\r\n            if (!c.excluded) {\r\n                const match = initialOffset.current.find((c2) => c2.coin === c.coin);\r\n                const offset = (c.offset === '-' || c.offset === '.') ? Number(0) : Number(c.offset);\r\n                totalValue += Math.max(c.number + offset - Number(match.offset), 0) * c.price;\r\n            }\r\n        });\r\n\r\n        data.forEach((c) => {\r\n            if (!c.excluded) {\r\n                const match = initialOffset.current.find((c2) => c2.coin === c.coin);\r\n                const offset = (c.offset === '-' || c.offset === '.') ? Number(0) : Number(c.offset);\r\n                const distr = (Math.max(c.number + offset - Number(match.offset), 0) * c.price / totalValue * 100).toFixed(precision);\r\n                c.currentDistribution = distr;\r\n            } else {\r\n                c.currentDistribution = (0).toFixed(precision);\r\n            }\r\n        });\r\n        return data;\r\n    }\r\n\r\n    const resetPortfolio = () => {\r\n        setSelected([]);\r\n        setPortfolio([]);\r\n        onInput([]);\r\n    }\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        let newSelected = [];\r\n        let allSelected = false;\r\n        if (selected.length === 0) {\r\n            newSelected = portfolio.map((n) => n.coin).filter(coin => coin !== input.basecoin);\r\n            allSelected = true;\r\n        }\r\n        setSelected(newSelected);\r\n\r\n        portfolio.forEach((coin) => {\r\n            handleSlider(coin.slider, coin.coin, newSelected);\r\n            if (coin.coin !== input.basecoin) toggleExcluded(coin.coin, allSelected);\r\n        });\r\n\r\n        updateCurrentDistribution(portfolio);\r\n    };\r\n\r\n    const handleClick = (coin) => {\r\n        if (coin !== input.basecoin) {\r\n            const selectedIndex = selected.indexOf(coin);\r\n\r\n            let newPortfolio = [...portfolio];\r\n            let match = newPortfolio.find(c => c.coin === coin);\r\n            match.excluded = (selectedIndex === -1);\r\n            setPortfolio(newPortfolio);\r\n\r\n            let newSelected = [];\r\n\r\n            if (selectedIndex === -1) {\r\n                newSelected = newSelected.concat(selected, coin);\r\n            } else if (selectedIndex === 0) {\r\n                newSelected = newSelected.concat(selected.slice(1));\r\n            } else if (selectedIndex === selected.length - 1) {\r\n                newSelected = newSelected.concat(selected.slice(0, -1));\r\n            } else if (selectedIndex > 0) {\r\n                newSelected = newSelected.concat(\r\n                    selected.slice(0, selectedIndex),\r\n                    selected.slice(selectedIndex + 1),\r\n                );\r\n            }\r\n\r\n            setSelected(newSelected);\r\n            toggleExcluded(coin, match.excluded);\r\n            handleSlider(match.slider, match.coin, newSelected);\r\n            updateCurrentDistribution(portfolio);\r\n        }\r\n    };\r\n\r\n    const toggleExcluded = (coin, excluded) => {\r\n        let original = configuration.portfolio.find(c => c.coin === coin);\r\n\r\n        // In case of first-time setup\r\n        if (!original) original = input.portfolio.find(c => c.coin === coin);\r\n\r\n        if (original.excluded !== excluded) {\r\n            let match = excludedChangeRef.current.find(c => c.coin === coin);\r\n\r\n            if (match) {\r\n                match.excluded = !match.excluded;\r\n                // const index = excludedChangeRef.current.findIndex(c => c.coin === coin);\r\n                // excludedChangeRef.current.splice(index, 1);\r\n            } else {\r\n                excludedChangeRef.current.push({\r\n                    coin: coin,\r\n                    excluded: excluded,\r\n                });\r\n            }\r\n        } else {\r\n            let match = excludedChangeRef.current.find(c => c.coin === coin);\r\n\r\n            if (match) {\r\n                match.excluded = !match.excluded;\r\n                // const index = excludedChangeRef.current.findIndex(c => c.coin === coin);\r\n                // excludedChangeRef.current.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        props.callback({\r\n            field: 'excludedChange',\r\n            input: excludedChangeRef.current,\r\n        });\r\n    }\r\n\r\n    const handleSlider = (value, coin, select = selected) => {\r\n        let newPortfolio = [...portfolio];\r\n        let match = newPortfolio.find(c => c.coin === coin);\r\n        match.slider = value;\r\n\r\n        let totalSlider = 0;\r\n        let numSlider = 0;\r\n        newPortfolio.forEach((coin) => {\r\n            if (select.indexOf(coin.coin) === -1) {\r\n                totalSlider += coin.slider;\r\n                if (coin.slider === -1) totalSlider++;\r\n                if (coin.slider !== -1) numSlider++;\r\n            }\r\n        });\r\n        let maxSlider;\r\n        const remainingSlider = 100 - totalSlider;\r\n        const numCoinsZero = newPortfolio.length - numSlider - select.length;\r\n        maxSlider = (numCoinsZero === 0) ? totalSlider : Math.max(100, totalSlider);\r\n        newPortfolio.forEach((coin) => {\r\n            coin.excluded = false;\r\n            if (select.indexOf(coin.coin) !== -1) {\r\n                coin.distribution = (0).toFixed(precision);\r\n                coin.excluded = true;\r\n            } else if (maxSlider <= 100) {\r\n                if (coin.slider === -1) coin.distribution = (remainingSlider / numCoinsZero).toFixed(precision);\r\n                else coin.distribution = (coin.slider / maxSlider * 100).toFixed(precision);\r\n            } else {\r\n                if (coin.slider === -1) coin.distribution = (0).toFixed(precision);\r\n                else coin.distribution = (coin.slider / maxSlider * 100).toFixed(precision);\r\n            }\r\n        });\r\n\r\n        setPortfolio(newPortfolio);\r\n        onInput(newPortfolio);\r\n    };\r\n\r\n    const handleOffset = (event, coin) => {\r\n        const pattern = /^-?([0-9]*)((\\.|,)\\d{0,8})?$/\r\n        let value = event.target.value;\r\n        if (pattern.test(value)) {\r\n            // Handle commas in input\r\n            if (value.includes(',')) value = value.replace(',', '.');\r\n            let newPortfolio = [...portfolio];\r\n            const offset = value;\r\n\r\n            let match = newPortfolio.find(c => c.coin === coin);\r\n            match.offset = offset;\r\n\r\n            newPortfolio = updateCurrentDistribution(newPortfolio);\r\n            setPortfolio(newPortfolio);\r\n        }\r\n    }\r\n\r\n    const handleBlur = (coin) => {\r\n        let newPortfolio = [...portfolio];\r\n        // offset is a string during entry, to get full control on the entered values\r\n        // when leaving the input field, convert to number, and update input\r\n        const match = portfolio.find((c) => c.coin === coin);\r\n        const offset = (match.offset === '-' || match.offset === '.') ? Number(0) : Number(match.offset);\r\n        match.offset = offset;\r\n\r\n        setPortfolio(newPortfolio);\r\n        onInput(newPortfolio);\r\n    }\r\n\r\n    const handleDelete = (coin) => {\r\n        setDeleteCoin(coin);\r\n        setOpenDelete(true);\r\n    }\r\n\r\n    const confirmDelete = (coin) => {\r\n        // Remove from excluded list at the top of the table\r\n        handleClick(coin);\r\n\r\n        let newPortfolio = [...portfolio];\r\n        const index = portfolio.findIndex((c) => c.coin === coin);\r\n        newPortfolio.splice(index, 1);\r\n        setPortfolio(newPortfolio);\r\n        onInput(newPortfolio);\r\n    }\r\n\r\n    const labelFormatter = (value) => {\r\n        if (value === -1) return '=';\r\n        return value;\r\n    }\r\n\r\n    const isSelected = (coin) => selected.indexOf(coin) !== -1;\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleTooltipClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleTooltipOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog open={openDelete} onClose={() => setOpenDelete(false)}>\r\n                <DialogTitle>Confirm Deletion</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Are you sure you want to delete {deleteCoin} from this list?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" onClick={() => setOpenDelete(false)} color={(mode === 'light') ? \"primary\" : \"secondary\"} >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" onClick={() => { setOpenDelete(false); confirmDelete(deleteCoin) }} color={(mode === 'light') ? \"primary\" : \"secondary\"} >\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Grid container alignItems=\"flex-end\">\r\n                <Grid item xs={11}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Coin Settings\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <ClickAwayListener onClickAway={handleTooltipClose}>\r\n                        <HtmlTooltip\r\n                            title={\r\n                                <React.Fragment>\r\n                                    <Box m={2}>\r\n                                        <div><b>{\"Base coin\"}</b></div>\r\n                                        <div>{\"Set the base coin used for all trades. Possible base coins are BTC, BUSD, USDT, USDC and EUR. \"}<i>{\"Make sure your portfolio contains some of your base coin of choice\"}</i>{\". Only then it will appear as an option in the dropdown menu.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div><b>{\"Exclude coins\"}</b></div>\r\n                                        <div>{\"Use the checkboxes on the left to exclude coins in your account from balancing. Balance Bot will completely ignore selected coins.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div><b>{\"Coin distribution\"}</b></div>\r\n                                        <div>{\"By default, all coins are balanced with an equal distribution. If you'd like to change the Target Distribution of your coins, use the sliders. Coins with their slider all the way to the left will get an even distribution up to a total of 100%. The Current Distribution column shows how the coins in your portfolio are currently distributed.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div><b>{\"Coin offset\"}</b></div>\r\n                                        <div>{\"If you'd like to store part of your coins outside of your exchange spot wallet (e.g. on a hardware wallet or in a staking wallet), and you still want those coins to be used for balancing, you can specify the number of those 'external' coins in the Coin Offset column. This obviously has an immediate effect on the coin distribution, so please make sure you adjust the target distribution accordingly.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div><i>{\"If you move coins out of your spot wallet, make sure that sufficient liquidity remains to execute balancing orders.\"}</i></div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div>{\"If you'd like to \"}<i>{\"exclude\"}</i>{\" a share of the coins you hold in your spot wallet from balancing, you can use a negative offset.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div><i>{\"Keep an eye on your portfolio over time to make sure the number of coins used for balancing doesn't get too small.\"}</i></div>\r\n                                    </Box>\r\n                                </React.Fragment>\r\n                            }\r\n                            onClose={handleTooltipClose}\r\n                            open={open}\r\n                            disableFocusListener\r\n                            disableHoverListener\r\n                            disableTouchListener\r\n                            interactive\r\n                        >\r\n                            <IconButton onClick={open ? handleTooltipClose : handleTooltipOpen}>\r\n                                <InfoOutlinedIcon color=\"secondary\" />\r\n                            </IconButton>\r\n                        </HtmlTooltip>\r\n                    </ClickAwayListener>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                {(coinsReceived || input.basecoin !== '') ? (\r\n                    <Box pt={3} pl={2}>\r\n                        <Grid item xs={5}>\r\n                            <FormControl>\r\n                                <InputLabel>Base Coin</InputLabel>\r\n                                <Select\r\n                                    labelId=\"base-coin\"\r\n                                    name=\"basecoin\"\r\n                                    value={basecoin}\r\n                                    onChange={onBasecoin}\r\n                                    className={classes.textinput}\r\n                                    disabled={basecoins.length === 0 || input.apiKey === '************' || input.apiSecret === '************'}\r\n                                >\r\n                                    {basecoins.map((coin, i) => {\r\n                                        return <MenuItem key={i} value={coin}>{coin}</MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                                <FormHelperText>Base coin cannot be changed after initial bot configuration</FormHelperText>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={7}>\r\n                            {(basecoins.length === 0) &&\r\n                                <Box pt={3}>\r\n                                    <Typography color=\"secondary\">Include some of your base coin of choice in your portfolio</Typography>\r\n                                </Box>\r\n                            }\r\n                        </Grid>\r\n                    </Box>\r\n                ) : (\r\n                    <div>\r\n                        <Box pt={4} pl={2}>\r\n                            <Typography>Loading portfolio data...</Typography>\r\n                        </Box>\r\n                        <Box pt={4} pl={2}>\r\n                            <Skeleton animation=\"wave\" />\r\n                        </Box>\r\n                    </div>\r\n                )}\r\n\r\n                <Paper className={classes.paper} elevation={0}>\r\n                    {(portfolioReceived && input.basecoin !== '') ? (\r\n                        <div>\r\n                            <EnhancedTableToolbar selected={selected} portfolio={portfolio} setSelected={setSelected} />\r\n                            < Table\r\n                                className={classes.table}\r\n                                size=\"small\"\r\n                                aria-labelledby=\"tableTitle\"\r\n                                aria-label=\"enhanced table\"\r\n                            >\r\n                                <EnhancedTableHead\r\n                                    classes={classes}\r\n                                    numSelected={selected.length}\r\n                                    onSelectAllClick={handleSelectAllClick}\r\n                                    rowCount={portfolio.length}\r\n                                />\r\n                                <TableBody>\r\n                                    {portfolio.map((coin, index) => {\r\n                                        const isItemSelected = isSelected(coin.coin);\r\n                                        const labelId = `enhanced-table-checkbox-${index}`;\r\n                                        let checkbox;\r\n                                        if (coin.coin !== input.basecoin) {\r\n                                            checkbox = <Checkbox\r\n                                                checked={isItemSelected}\r\n                                                inputProps={{ 'aria-labelledby': labelId }}\r\n                                            />\r\n                                        } else {\r\n                                            checkbox = null;\r\n                                        }\r\n\r\n                                        return (\r\n                                            <TableRow\r\n                                                hover\r\n                                                role=\"checkbox\"\r\n                                                aria-checked={isItemSelected}\r\n                                                tabIndex={-1}\r\n                                                key={coin.coin}\r\n                                                selected={isItemSelected}\r\n                                            >\r\n                                                <TableCell padding=\"checkbox\" onClick={(event) => handleClick(coin.coin)}>\r\n                                                    {checkbox}\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\" onClick={(event) => handleClick(coin.coin)}>\r\n                                                    {coin.coin}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <MySlider\r\n                                                        value={coin.slider}\r\n                                                        step={1}\r\n                                                        valueLabelDisplay=\"on\"\r\n                                                        marks={marks}\r\n                                                        min={-1}\r\n                                                        valueLabelFormat={value => <div>{labelFormatter(value)}</div>}\r\n                                                        onChange={(event, value) => handleSlider(value, coin.coin)}\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" className={classes.cell} id={labelId} scope=\"row\" padding=\"none\" align=\"left\">\r\n                                                    {coin.distribution}%\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" className={classes.cell} id={labelId} scope=\"row\" padding=\"none\" align=\"left\">\r\n                                                    {coin.currentDistribution}%\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" className={classes.cell} id={labelId} scope=\"row\" padding=\"none\" align=\"left\">\r\n                                                    <form className={classes.textinput2} noValidate autoComplete=\"off\">\r\n                                                        <Input id=\"offset\" disableUnderline inputProps={{ style: { fontSize: 14, textAlign: 'right' } }}\r\n                                                            value={coin.offset}\r\n                                                            onChange={(event) => handleOffset(event, coin.coin)}\r\n                                                            onBlur={() => handleBlur(coin.coin)} />\r\n                                                    </form>\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" className={classes.cell2} id={labelId} scope=\"row\" padding=\"none\" align=\"left\">\r\n                                                    {(coin.coin === input.basecoin && parseFloat(coin.distribution) === 0) ? (\r\n                                                        <Typography variant=\"overline\" color=\"secondary\">&nbsp;Cannot be 0%</Typography>\r\n                                                    ) : (null)\r\n                                                    }\r\n                                                </TableCell>\r\n                                                <TableCell component=\"th\" className={classes.cell} id={labelId} scope=\"row\" padding=\"none\" align=\"left\">\r\n                                                    {(coin.excluded && parseFloat(coin.number) === 0) ? (\r\n                                                        <LightTooltip title=\"Delete zero-balance coin\">\r\n                                                            <IconButton size=\"small\" onClick={() => handleDelete(coin.coin)}>\r\n                                                                <DeleteIcon color=\"secondary\" />\r\n                                                            </IconButton>\r\n                                                        </LightTooltip>\r\n                                                    ) : (null)\r\n                                                    }\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    ) : (input.basecoin !== '') && (\r\n                        <div>\r\n                            <Box pt={4} pl={2}>\r\n                                <Typography>Loading portfolio data...</Typography>\r\n                            </Box>\r\n                            <Box pt={4} pl={2}>\r\n                                <Skeleton animation=\"wave\" />\r\n                                <Skeleton animation=\"wave\" />\r\n                                <Skeleton animation=\"wave\" />\r\n                            </Box>\r\n                        </div>\r\n                    )}\r\n                </Paper>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { format, parse, subDays, isBefore } from 'date-fns';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    DatePicker,\r\n} from '@material-ui/pickers';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { HtmlTooltip } from './HtmlToolTip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport cloneDeep from 'lodash.clonedeep';\r\n\r\nconst columns = [\r\n    { field: 'coin', headerName: 'Coin', width: 350, editable: false },\r\n    { field: 'number', headerName: 'Number', type: 'number', width: 200, editable: true, valueFormatter: ({ value }) => (Number(value)) },\r\n    { field: 'price', headerName: 'Price', type: 'number', width: 200, editable: true, valueFormatter: ({ value }) => (Number(value)) },\r\n    { field: 'suggested', headerName: 'Suggested Change', type: 'string', width: 200, editable: false, valueFormatter: ({ value }) => (value ? '✔' : '') },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    header: {\r\n        \"& .MuiDataGrid-colCell\":\r\n            theme.palette.type === 'light'\r\n                ? {\r\n                    backgroundColor: '#aaaaaa',\r\n                }\r\n                : {\r\n                    backgroundColor: '#777777',\r\n                },\r\n    },\r\n    paper: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    day: {\r\n        width: 36,\r\n        height: 36,\r\n        // fontSize: theme.typography.caption.fontSize,\r\n        fontSize: \"inherit\",\r\n        margin: \"0\",\r\n        textAlign: \"center\",\r\n        color: \"inherit\",\r\n    },\r\n    highlight: {\r\n        background: theme.palette.secondary.main,\r\n        color: theme.palette.common.white,\r\n        borderRadius: \"50%\",\r\n    },\r\n    highlightSelected: {\r\n        background: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n        borderRadius: \"50%\",\r\n    },\r\n    today: {\r\n        background: '#777',\r\n        color: theme.palette.common.white,\r\n        borderRadius: \"50%\",\r\n    },\r\n    outofbounce: {\r\n        color: theme.palette.text.disabled,\r\n        borderRadius: \"50%\",\r\n    },\r\n}));\r\n\r\nexport default function ConfigP3(props) {\r\n    const classes = useStyles();\r\n\r\n    const now = format(new Date(), 'yyyy/MM/dd');\r\n\r\n    const [input, setInput] = useContext(ConfigurationInputContext);\r\n    const [pickerOpen, setPickerOpen] = useState(false);\r\n    const configuration = useContext(ConfigurationContext)[0];\r\n    const performance = useContext(PerformanceContext)[0];\r\n    const initRef = useRef(false);\r\n    const liquidityRef = useRef(cloneDeep(input.liquidity));\r\n    const liqIndexRef = useRef(-1);\r\n    const selectedDateRef = useRef(now);\r\n    const [balanceDay, setBalanceDay] = useState([]);\r\n    // const [recreate, setRecreate] = useState(input.recreate);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const checkLiquidityChanges = () => {\r\n        const inp = input.portfolio;\r\n        const excludedChange = input.excludedChange;\r\n        const today = format(new Date(), 'yyyy/MM/dd');\r\n\r\n        let changes = [];\r\n\r\n        inp.forEach(coin => {\r\n            const match = excludedChange ? excludedChange.find(c => c.coin === coin.coin) : false;\r\n            // If coin's excluded state was changed (once or more) in step 2\r\n            if (match) {\r\n                const original = configuration.portfolio.find(c => c.coin === coin.coin);\r\n                // Get the original liquidity when toggling excluded\r\n                const liq = configuration.liquidity.find(day => day.date === today);\r\n                const liqcoin = liq ? liq.changes.find(c => c.coin === coin.coin) : false;\r\n                const current = liq ? (liqcoin ? liqcoin : { number: 0 }) : { number: 0 };\r\n\r\n                if (match.excluded !== original.excluded) {\r\n                    if (coin.excluded) {\r\n                        changes.push({\r\n                            coin: coin.coin,\r\n                            number: current.number - coin.number,   // In case a coin is excluded during day 1\r\n                            price: (current.number - coin.number !== 0) ? coin.price : 0,\r\n                            suggested: true,\r\n                        });\r\n                    }\r\n                    else {\r\n                        changes.push({\r\n                            coin: coin.coin,\r\n                            number: current.number + coin.number,   // In case a coin is included that was earlier excluded on the same day\r\n                            price: (current.number + coin.number !== 0) ? coin.price : 0,\r\n                            suggested: true,\r\n                        });\r\n                    }\r\n                } else {\r\n                    // Reset to original liquidity (e.g. when toggled twice)\r\n                    changes.push({\r\n                        coin: coin.coin,\r\n                        number: current.number,\r\n                        price: (current.number !== 0) ? current.price : 0,\r\n                        suggested: false,\r\n                    });\r\n                }\r\n            } else {\r\n                if (liqIndexRef.current !== -1) {\r\n                    const liq = liquidityRef.current[liqIndexRef.current];\r\n                    const match = liq.changes.find(c => c.coin === coin.coin);\r\n                    if (match) {\r\n                        changes.push({\r\n                            coin: match.coin,\r\n                            number: match.number,\r\n                            price: match.price,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (changes.length !== 0) {\r\n            const today = format(new Date(), 'yyyy/MM/dd');\r\n\r\n            if (liqIndexRef.current !== -1) {\r\n                liquidityRef.current[liqIndexRef.current] = {\r\n                    date: today,\r\n                    changes: changes,\r\n                }\r\n            } else {\r\n                liquidityRef.current.push({\r\n                    date: today,\r\n                    changes: changes,\r\n                });\r\n            }\r\n\r\n            liqIndexRef.current = liquidityRef.current.length - 1;\r\n\r\n            props.callback({\r\n                field: 'liquidity',\r\n                input: liquidityRef.current,\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        initRef.current = (input.apiKey !== '************' && input.apiSecret !== '************');\r\n\r\n        const today = format(new Date(), 'yyyy/MM/dd');\r\n        selectedDateRef.current = today;\r\n\r\n        const liq = liquidityRef.current.find(day => day.date === today);\r\n\r\n        if (liq) {\r\n            liqIndexRef.current = liquidityRef.current.findIndex(day => day.date === today);\r\n        } else {\r\n            liqIndexRef.current = -1;\r\n        }\r\n\r\n        if (!initRef.current) checkLiquidityChanges();\r\n\r\n        acceptDateChange(new Date());\r\n\r\n        // set liquidity defaults\r\n        if (initRef.current) {\r\n            handleCurrent();\r\n        }\r\n\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    const updateBalanceDay = (changes) => {\r\n        changes.sort((a, b) => (a.coin > b.coin) ? 1 : ((b.coin > a.coin) ? -1 : 0));\r\n\r\n        setBalanceDay(changes);\r\n    }\r\n\r\n    const handleDateChange = (indate) => {\r\n    };\r\n\r\n    const acceptDateChange = (indate) => {\r\n        setPickerOpen(false);\r\n\r\n        const date = format(indate, \"yyyy/MM/dd\");\r\n        if (isBefore(parse(date, 'yyyy/MM/dd', new Date()), parse(input.startdate, 'yyyy/MM/dd', new Date()))) {\r\n            return;\r\n        }\r\n\r\n        selectedDateRef.current = date;\r\n\r\n        if (!initRef.current) {\r\n            let coins = [];\r\n\r\n            // Select coins to be shown in the balances table\r\n            // Only the ones that are in the performance file for the selected date\r\n            let perf = performance.find(day => day.date === date);\r\n            if (perf) {\r\n                perf.coins.forEach(coin => {\r\n                    coins.push({\r\n                        id: coin.coin,\r\n                        coin: coin.coin,\r\n                        number: 0,\r\n                        price: 0,\r\n                    });\r\n                });\r\n            }\r\n\r\n            // Include coins from the previous day, in case on the selected day a coin was excluded / removed\r\n            const today = parse(date, 'yyyy/MM/dd', new Date());\r\n            const yesterday = format(subDays(today, 1), 'yyyy/MM/dd');\r\n            perf = performance.find(day => day.date === yesterday);\r\n            if (perf) {\r\n                perf.coins.forEach(coin => {\r\n                    if (!coins.find(c => c.coin === coin.coin)) {\r\n                        coins.push({\r\n                            id: coin.coin,\r\n                            coin: coin.coin,\r\n                            number: 0,\r\n                            price: 0,\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            // Include coins that are in portfolio if selected date is today\r\n            if (selectedDateRef.current === now) {\r\n                input.portfolio.forEach(coin => {\r\n                    if (!coin.excluded && !coins.find(c => c.coin === coin.coin)) {\r\n                        coins.push({\r\n                            id: coin.coin,\r\n                            coin: coin.coin,\r\n                            number: 0,\r\n                            price: 0,\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            const liq = liquidityRef.current.find(day => day.date === date);\r\n\r\n            if (liq) {\r\n                // Include coins that are stored in liquidity (could be a coin that got included in step 2)\r\n                liq.changes.forEach(coin => {\r\n                    if (!coins.find(c => c.coin === coin.coin)) {\r\n                        coins.push({\r\n                            id: coin.coin,\r\n                            coin: coin.coin,\r\n                            number: 0,\r\n                            price: 0,\r\n                        });\r\n                    }\r\n                });\r\n\r\n                liqIndexRef.current = liquidityRef.current.findIndex(day => day.date === date);\r\n                let newChanges = [];\r\n                coins.forEach(coin => {\r\n                    let match = liq.changes.find(c => c.coin === coin.coin);\r\n                    if (match) {\r\n                        newChanges.push({\r\n                            id: coin.coin,\r\n                            coin: coin.coin,\r\n                            number: match.number,\r\n                            price: match.price,\r\n                            suggested: match.suggested,\r\n                        });\r\n                    } else {\r\n                        newChanges.push({ ...coin });\r\n                    }\r\n                });\r\n                coins = [...newChanges];\r\n            } else {\r\n                liqIndexRef.current = -1;\r\n            }\r\n            updateBalanceDay(coins);\r\n        }\r\n    };\r\n\r\n    // const handleCheck = (e) => {\r\n    //     const checked = e.target.checked;\r\n    //     props.callback({\r\n    //         field: 'recreate',\r\n    //         input: checked,\r\n    //     });\r\n    //     setRecreate(checked);\r\n    // }\r\n\r\n    const handleEditCellChangeCommitted = (e) => {\r\n        // let newLiquidity = [...liquidityRef.current]; --> this doesn't work, as configuration somehow gets updated even when changes are not saved...\r\n        let newLiquidity = cloneDeep(liquidityRef.current);\r\n\r\n        let newIndex = liqIndexRef.current;\r\n\r\n        if (newIndex === -1) {\r\n            newIndex = newLiquidity.push({\r\n                date: selectedDateRef.current,\r\n                changes: [],\r\n            }) - 1;\r\n\r\n            liqIndexRef.current = newIndex;\r\n        }\r\n\r\n        if (newLiquidity[newIndex].changes) {\r\n            let match = newLiquidity[newIndex].changes.find(c => c.coin === e.id);\r\n            if (!match) {\r\n                newLiquidity[newIndex].changes.push({ coin: e.id });\r\n                match = newLiquidity[newIndex].changes.find(c => c.coin === e.id);\r\n            }\r\n            if (match) {\r\n                match['id'] = e.id;\r\n                match[e.field] = Number(e.props.value);\r\n                // If number was entered, auto-fill the price field with current day price\r\n                // If not available, take the previous day's price\r\n                if (e.field === 'number') {\r\n                    if (e.props.value !== '0') {\r\n                        let perf = performance.find(day => day.date === selectedDateRef.current);\r\n                        if (perf) {\r\n                            let coin = perf.coins.find(c => c.coin === e.id);\r\n                            if (coin) {\r\n                                match['price'] = Number(coin.price);\r\n                            } else {\r\n                                const today = parse(selectedDateRef.current, 'yyyy/MM/dd', new Date());\r\n                                const yesterday = format(subDays(today, 1), 'yyyy/MM/dd');\r\n                                perf = performance.find(day => day.date === yesterday);\r\n                                if (perf) {\r\n                                    let coin = perf.coins.find(c => c.coin === e.id);\r\n                                    if (coin) {\r\n                                        match['price'] = Number(coin.price);\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        match['price'] = 0;\r\n                    }\r\n                }\r\n                let newBalance = [...balanceDay];\r\n                let index = newBalance.findIndex(c => c.coin === e.id);\r\n                newBalance[index] = match;\r\n                setBalanceDay(newBalance);\r\n            }\r\n        }\r\n\r\n        liquidityRef.current = newLiquidity;\r\n\r\n        props.callback({\r\n            field: 'liquidity',\r\n            input: newLiquidity,\r\n        });\r\n    }\r\n\r\n    const handleCurrent = () => {\r\n        let newStartPerformance = [];\r\n\r\n        input.portfolio.forEach((coin) => {\r\n            if (initRef.current) {\r\n                // Set default values at initial configuration\r\n                if (!coin.excluded) {\r\n                    newStartPerformance.push({\r\n                        id: coin.coin,\r\n                        coin: coin.coin,\r\n                        number: Number((coin.number).toFixed(8)),\r\n                        price: Number((coin.price).toFixed(8)),\r\n                        suggested: true,\r\n                    });\r\n                }\r\n            } else {\r\n                let coins = [];\r\n                let perf = performance.find(day => day.date === selectedDateRef.current);\r\n                if (perf) {\r\n                    perf.coins.forEach(coin => {\r\n                        coins.push({\r\n                            coin: coin.coin,\r\n                        });\r\n                    });\r\n                }\r\n\r\n                let match = coins.find(c => c.coin === coin.coin);\r\n                if (match) {\r\n                    newStartPerformance.push({\r\n                        id: coin.coin,\r\n                        coin: coin.coin,\r\n                        number: Number((coin.number).toFixed(8)),\r\n                        price: Number((coin.price).toFixed(8)),\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        updateBalanceDay(newStartPerformance);\r\n\r\n        let newLiquidity = [];\r\n\r\n        if (initRef.current) {\r\n            let changes = [];\r\n\r\n            newStartPerformance.forEach(coin => {\r\n                changes.push({\r\n                    coin: coin.coin,\r\n                    number: coin.number,\r\n                    price: coin.price,\r\n                });\r\n            });\r\n\r\n            const today = format(new Date(), 'yyyy/MM/dd');\r\n\r\n            newLiquidity.push({\r\n                date: today,\r\n                changes: changes,\r\n            });\r\n        } else {\r\n            // newLiquidity = [...liquidityRef.current]; --> this doesn't work, as configuration somehow gets updated even when changes are not saved...\r\n            newLiquidity = cloneDeep(liquidityRef.current);\r\n            newLiquidity[liqIndexRef.current].changes.forEach((row) => {\r\n                let match = newStartPerformance.find(c => c.coin === row.coin);\r\n                if (match) {\r\n                    row.number = match.number;\r\n                    row.price = match.price;\r\n                }\r\n            });\r\n        }\r\n\r\n        liquidityRef.current = newLiquidity;\r\n\r\n        props.callback({\r\n            field: 'liquidity',\r\n            input: newLiquidity,\r\n        });\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        if (liqIndexRef.current !== 0) {\r\n            let newStartPerformance = [];\r\n            balanceDay.forEach((coin) => {\r\n                newStartPerformance.push({\r\n                    id: coin.coin,\r\n                    coin: coin.coin,\r\n                    number: 0,\r\n                    price: 0,\r\n                });\r\n            });\r\n            updateBalanceDay(newStartPerformance);\r\n\r\n            liquidityRef.current.splice(liqIndexRef.current, 1);\r\n            liqIndexRef.current = -1;\r\n\r\n            props.callback({\r\n                field: 'liquidity',\r\n                input: liquidityRef.current,\r\n            });\r\n        }\r\n    }\r\n\r\n    const renderDay = (day, selectedDay, dayInCurrentMonth, dayComponent) => {\r\n        let selected = format(selectedDay, 'yyyy/MM/dd');\r\n        let date = format(day, 'yyyy/MM/dd');\r\n        let d = format(day, 'd');\r\n        const today = format(new Date(), 'yyyy/MM/dd');\r\n\r\n        let dates = [];\r\n        liquidityRef.current.forEach((day) => {\r\n            dates.push(day.date);\r\n        });\r\n\r\n        // if (isBefore(parse(date, 'yyyy/MM/dd', new Date()), parse(input.startdate, 'yyyy/MM/dd', new Date()))) {\r\n        //     if (dayInCurrentMonth) {\r\n        //         return (\r\n        //             <div className={classes.outofbounce}>\r\n        //                 <IconButton className={classes.day}>\r\n        //                     <span> {d} </span>\r\n        //                 </IconButton>\r\n        //             </div>\r\n        //         )\r\n        //     } else {\r\n        //         return dayComponent;\r\n        //     }\r\n        // }\r\n\r\n        if (date === selectedDateRef.current && dayInCurrentMonth) {\r\n            return (\r\n                <div className={classes.highlightSelected}>\r\n                    <IconButton className={classes.day}>\r\n                        <span> {d} </span>\r\n                    </IconButton>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (dates.includes(date) && dayInCurrentMonth && selected !== date) {\r\n            return (\r\n                <div className={classes.highlight}>\r\n                    <IconButton className={classes.day}>\r\n                        <span> {d} </span>\r\n                    </IconButton>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (date === today) {\r\n            return (\r\n                <div className={classes.today}>\r\n                    <IconButton className={classes.day}>\r\n                        <span> {d} </span>\r\n                    </IconButton>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return dayComponent;\r\n    }\r\n\r\n    // function CustomToolbar() {\r\n    //     return (\r\n    //         <Grid container direction=\"row\" alignItems=\"flex-end\" justify=\"space-between\">\r\n    //             <Grid item xs={9} >\r\n    //                 <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n    //                     <DatePicker\r\n    //                         disableToolbar=\"true\"\r\n    //                         variant=\"inline\"\r\n    //                         format=\"yyyy/MM/dd\"\r\n    //                         margin=\"normal\"\r\n    //                         id=\"date-picker-inline\"\r\n    //                         label=\"Select date\"\r\n    //                         value={selectedDateRef.current}\r\n    //                         disableFuture=\"true\"\r\n    //                         onChange={handleDateChange}\r\n    //                         onAccept={acceptDateChange}\r\n    //                         renderDay={renderDay}\r\n    //                     />\r\n    //                 </MuiPickersUtilsProvider>\r\n    //             </Grid>\r\n    //             <Grid item xs={3}>\r\n    //                 <Box display=\"flex\" justifyContent=\"flex-end\">\r\n    //                     <Button disabled={liqIndexRef.current === 0 || liqIndexRef.current === -1} variant=\"contained\" color=\"primary\" startIcon={<ArrowDownwardIcon />} onClick={handleDelete}>\r\n    //                         Delete Liq Changes\r\n    //                     </Button>\r\n    //                 </Box>\r\n    //             </Grid>\r\n    //             <Grid item xs={3} >\r\n    //                 <Button variant=\"contained\" color=\"primary\" startIcon={<ArrowDownwardIcon />} onClick={handleCurrent}>\r\n    //                     Fetch balance\r\n    //                 </Button>\r\n    //             </Grid>\r\n    //             <Grid container alignItems=\"center\" justify=\"space-between\">\r\n    //                 <Grid item>\r\n    //                     <FormControlLabel\r\n    //                         control={<Checkbox color=\"secondary\" name=\"rewrite\" value=\"yes\" checked={recreate} onChange={handleCheck} />}\r\n    //                         label=\"Recreate performance history\"\r\n    //                     />\r\n    //                 </Grid>\r\n    //                 <Grid item>\r\n    //                     <Button variant=\"contained\" color=\"primary\" startIcon={<ArrowDownwardIcon />} onClick={handleCurrent}>\r\n    //                         Use current balance\r\n    //                     </Button>\r\n    //                 </Grid>\r\n    //             </Grid>\r\n    //         </Grid>\r\n    //     );\r\n    // }\r\n\r\n    const [openTT, setOpenTT] = useState(false);\r\n\r\n    const handleTooltipClose = () => {\r\n        setOpenTT(false);\r\n    };\r\n\r\n    const handleTooltipOpen = () => {\r\n        setOpenTT(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Backdrop className={classes.backdrop} open={open}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <React.Fragment>\r\n                <Grid container alignItems=\"flex-end\">\r\n                    <Grid item xs={11}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Liquidity Settings\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                        <ClickAwayListener onClickAway={handleTooltipClose}>\r\n                            <HtmlTooltip\r\n                                title={\r\n                                    <React.Fragment>\r\n                                        <Box m={2}>\r\n                                            <div><b>{\"Use of liquidity settings\"}</b></div>\r\n                                            <div>{\"Balance Bot uses the liquidity settings to determine the performance of your balancing portfolio. It compares the current portfolio value with the starting portfolio value to calculate change metrics and performance graphs.\"}</div>\r\n                                            <div>&nbsp;</div>\r\n                                            <div><b>{\"Default liquidity settings\"}</b></div>\r\n                                            <div>{\"By default, Balance Bot will check the number of coins in your account and their prices upon first-time configuration, and use these to calculate the starting balance.\"}</div>\r\n                                            <div>&nbsp;</div>\r\n                                            <div><b>{\"Register liquidity changes\"}</b></div>\r\n                                            <div>{\"If you're adding or removing coins after the start date, register those liquidity changes on the respective date, so that your bot can 'normalize' its metrics and performance graphs stay accurate. Do so by selecting the appropriate date, and fill in the number of coins and its price, expressed in your selected base coin, at which you purchased / sold those coins. Simply click on the cells in the table to edit.\"}</div>\r\n                                            <div>&nbsp;</div>\r\n                                            <div>{\"Note: if you've included or excluded a coin in step 2 of the configuration, Balance Bot will automatically suggest to add/remove those coins in the table. This is indicated with a checkmark in the 'suggested' column.\"}</div>\r\n                                            <div>&nbsp;</div>\r\n                                            <div>{\"For dates other than the start date, you can completely remove the liquidity changes for the selected date by clicking the 'delete liq changes' button. This will not affect liquidity changes for other dates, those will be kept.\"}</div>\r\n                                            <div>&nbsp;</div>\r\n                                            <div>{\"For more information about the normalization concept, read \"}<Link href=\"https://hodlerhacks.com/balance-bot/using-balance-bot/liquidity-changes/\" target=\"_blank\" rel=\"noopener\" color=\"secondary\">here</Link>{\".\"}</div>\r\n                                            {/* <div>&nbsp;</div>\r\n                                            <div>{\"When clicking the 'fetch balance' button, Balance Bot will retrieve the current balance to fill the table. This may be useful if you want to reset the starting balance.\"}</div> */}\r\n                                            {/* <div>&nbsp;</div>\r\n                                            <div><b>{\"Recreate performance history\"}</b></div>\r\n                                            <div>{\"Balance Bot can 'recreate history' by analyzing trades that were executed as of the start date, and use that information to create performance graphs for that period. Tick the 'Recreate performance history' checkbox to confirm that you want to do so. Make sure to set the start date right \"}<i>{\"after\"}</i>{\" the date when you bought the coins in your portfolio, to avoid these purchases to be counted twice.\"}</div>\r\n                                            <div>&nbsp;</div>\r\n                                            <div>{\"Depending on the start date and your trade history, it may take several minutes to recreate your performance history and until this is visible on the performance screen. You will receive a notification message once the process has completed.\"}</div>\r\n                                            <div>&nbsp;</div>\r\n                                            <div><i>{\"Note: \"}</i>{\"Recreating the performance history will also recreate your event history, including all executed orders since the start date, but excluding error messages that may have been logged in the past.\"}</div> */}\r\n                                        </Box>\r\n                                    </React.Fragment>\r\n                                }\r\n                                onClose={handleTooltipClose}\r\n                                open={openTT}\r\n                                disableFocusListener\r\n                                disableHoverListener\r\n                                disableTouchListener\r\n                                interactive\r\n                            >\r\n                                <IconButton onClick={openTT ? handleTooltipClose : handleTooltipOpen}>\r\n                                    <InfoOutlinedIcon color=\"secondary\" />\r\n                                </IconButton>\r\n                            </HtmlTooltip>\r\n                        </ClickAwayListener>\r\n                    </Grid>\r\n                </Grid>\r\n                <div style={{ width: '952px' }}>\r\n                    {/* <CustomToolbar /> */}\r\n                    <Grid container direction=\"row\" alignItems=\"flex-end\" justify=\"space-between\">\r\n                        <Grid item xs={9} >\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <DatePicker\r\n                                    open={pickerOpen}\r\n                                    onOpen={() => setPickerOpen(true)}\r\n                                    onClose={() => setPickerOpen(false)}\r\n                                    disableToolbar=\"true\"\r\n                                    variant=\"inline\"\r\n                                    format=\"yyyy/MM/dd\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-inline\"\r\n                                    label=\"Select date\"\r\n                                    value={selectedDateRef.current}\r\n                                    disableFuture=\"true\"\r\n                                    minDate={parse(input.startdate, 'yyyy/MM/dd', new Date())}\r\n                                    onChange={handleDateChange}\r\n                                    onAccept={acceptDateChange}\r\n                                    renderDay={renderDay}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                                <Button disabled={liqIndexRef.current === 0 || liqIndexRef.current === -1} variant=\"contained\" color=\"primary\" startIcon={<ArrowDownwardIcon />} onClick={handleDelete}>\r\n                                    Delete Liq Changes\r\n                                </Button>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={3}>\r\n                        <Grid container>\r\n                            <Paper className={classes.paper} elevation={0}>\r\n                                <div style={{ width: '952px' }}>\r\n                                    <DataGrid className={classes.header} rows={balanceDay} columns={columns}\r\n                                        autoHeight={true}\r\n                                        density='compact'\r\n                                        disableColumnSelector={true}\r\n                                        disableColumnMenu={true}\r\n                                        hideFooter={true}\r\n                                        hideFooterPagination={true}\r\n                                        hideFooterRowCount={true}\r\n                                        onEditCellChangeCommitted={handleEditCellChangeCommitted}\r\n                                    />\r\n                                </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Box>\r\n                </div>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n}","import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { HtmlTooltip } from './HtmlToolTip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Box from '@material-ui/core/Box';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Link from '@material-ui/core/Link';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        minWidth: '100%',\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    textinput: {\r\n        width: '380px',\r\n    }\r\n}));\r\n\r\nexport default function ConfigP4(props) {\r\n    const classes = useStyles();\r\n\r\n    const [input, setInput] = useContext(ConfigurationInputContext);\r\n\r\n    const [botname, setBotname] = useState(input.botname || '');\r\n    const [showname, setShowname] = useState(input.showname || false);\r\n    const [threshold, setThreshold] = useState(input.threshold || '3');\r\n    const [ordertype, setOrdertype] = useState(input.ordertype || 'market');\r\n    const [timeout, setTimeout] = useState(input.timeout || 20);\r\n    const [headless, setHeadless] = useState(input.headless || false);\r\n    const [cooldown, setCooldown] = useState(input.cooldown || 0);\r\n    const [emojiBuy, setEmojiBuy] = useState(input.emojibuy || '');\r\n    const [emojiSell, setEmojiSell] = useState(input.emojisell || '');\r\n\r\n    const onHeadless = (e) => {\r\n        props.callback({\r\n            field: 'headless',\r\n            input: e.target.checked,\r\n        });\r\n        setHeadless(e.target.checked);\r\n    }\r\n\r\n    const onBotname = (e) => {\r\n        props.callback({\r\n            field: e.target.id,\r\n            input: e.target.value\r\n        });\r\n        setBotname(e.target.value);\r\n    }\r\n\r\n    const onShowname = (e) => {\r\n        props.callback({\r\n            field: 'showname',\r\n            input: e.target.checked,\r\n        });\r\n        setShowname(e.target.checked);\r\n    }\r\n\r\n    const onThreshold = (e) => {\r\n        const pattern = /^[0-9]*\\.?[0-9]*$/\r\n        if (pattern.test(e.target.value)) {\r\n            props.callback({\r\n                field: e.target.id,\r\n                input: e.target.value\r\n            });\r\n            setThreshold(e.target.value);\r\n        }\r\n    }\r\n\r\n    const onOrdertype = (e) => {\r\n        props.callback({\r\n            field: e.target.name,\r\n            input: e.target.value\r\n        });\r\n        setOrdertype(e.target.value);\r\n    }\r\n\r\n    const onTimeout = (e) => {\r\n        props.callback({\r\n            field: e.target.name,\r\n            input: e.target.value\r\n        });\r\n        setTimeout(e.target.value);\r\n    }\r\n\r\n    const onEmojiBuy = (e) => {\r\n        const pattern = /^[0-9,A-F]{0,5}$/\r\n        if (pattern.test(e.target.value)) {\r\n            props.callback({\r\n                field: e.target.id,\r\n                input: e.target.value\r\n            });\r\n            setEmojiBuy(e.target.value);\r\n        }\r\n    }\r\n\r\n    const onEmojiSell = (e) => {\r\n        const pattern = /^[0-9,A-F]{0,5}$/\r\n        if (pattern.test(e.target.value)) {\r\n            props.callback({\r\n                field: e.target.id,\r\n                input: e.target.value\r\n            });\r\n            setEmojiSell(e.target.value);\r\n        }\r\n    }\r\n\r\n    const onCooldown = (e) => {\r\n        const pattern = /^[0-9]*$/\r\n        if (pattern.test(e.target.value)) {\r\n            props.callback({\r\n                field: e.target.id,\r\n                input: e.target.value\r\n            });\r\n            setCooldown(e.target.value);\r\n        }\r\n    }\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleTooltipClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleTooltipOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container alignItems=\"flex-end\">\r\n                <Grid item xs={11}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        General Settings\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <ClickAwayListener onClickAway={handleTooltipClose}>\r\n                        <HtmlTooltip\r\n                            title={\r\n                                <React.Fragment>\r\n                                    <Box m={2}>\r\n                                        <div><b>{\"Bot Name\"}</b></div>\r\n                                        <div>{\"Give your bot a descriptive name. This is especially useful if you run multiple bots, so you can easily recognize each.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div><b>{\"Balancing Threshold\"}</b></div>\r\n                                        <div>{\"The balancing threshold is used by Balance Bot to determine when to sell/buy coins. The threshold is the relative deviation from the target distribution at which point the bot will place an order to restore the coin to the target distribution.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div><b>{\"Order Type\"}</b></div>\r\n                                        <div>{\"Market Orders get executed immediately, but the price is not guaranteed. Limit Orders have a preset price, but it may take time before the order is filled. If the order is not filled after the select time out period, the order is canceled. High-Margin uses the ask price when selling, and the bid price when buying. Low-Margin uses the bid price when selling, and the ask price when buying. High-Margin limit orders may take longer to get filled, but at a better price.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div><b>{\"Emojis\"}</b></div>\r\n                                        <div>{\"Just because it's fun, you can configure an emoji to be shown in order notifications. By setting a different emoji for sell and buy orders, you can quickly identify the order type. You can find the complete list of emojis here \"}<Link href=\"https://www.unicode.org/emoji/charts/full-emoji-list.html\" target=\"_blank\" rel=\"noopener\" color=\"secondary\">https://www.unicode.org/emoji/charts/full-emoji-list.html</Link>{\". Copy and paste the code of your preferred emojis, but without the U+ prefix (e.g. enter 1F680, instead of U+1F680). If the code is correct, the emoji will show up to the right of the entry field.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div><b>{\"Cooldown Trigger\"}</b></div>\r\n                                        <div>{\"At times of high price volatility, Balance Bot may perform many trades to keep your portfolio balanced. This may not be preferred, because of the resulting trading fees. To avoid such situation, you may choose to trigger a 1 hour cooldown period, which kicks in when the set number of trades are performed within a 5 minute period.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div><b>{\"Automatic Mode\"}</b></div>\r\n                                        <div>{\"You can operate your bot manually. In this mode, you will need to keep an eye on the dashboard and place manual orders when the dashboard indicates that a coin should be bought or sold. This is useful if you want to have full control, typically when you use Balance Bot for the first time and you want to get a feel for how it works.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div>{\"Enabling automatic mode is a lot more practical though, as Balance Bot will run 24/7 and place orders automatically to keep your portfolio balanced.\"}</div>\r\n                                        <div>&nbsp;</div>\r\n                                        <div><i>{\"Note: \"}</i>{\"You don't need to keep your browser open to run your bot in automatic mode. The application will keep running in the background. You can open the application in the browser at any time to check the status of your bot.\"}</div>\r\n                                    </Box>\r\n                                </React.Fragment>\r\n                            }\r\n                            onClose={handleTooltipClose}\r\n                            open={open}\r\n                            disableFocusListener\r\n                            disableHoverListener\r\n                            disableTouchListener\r\n                            interactive\r\n                        >\r\n                            <IconButton onClick={open ? handleTooltipClose : handleTooltipOpen}>\r\n                                <InfoOutlinedIcon color=\"secondary\" />\r\n                            </IconButton>\r\n                        </HtmlTooltip>\r\n                    </ClickAwayListener>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"botname\"\r\n                        name=\"botname\"\r\n                        label=\"Bot Name\"\r\n                        helperText=\"Give your bot a name\"\r\n                        value={botname}\r\n                        onChange={onBotname}\r\n                        className={classes.textinput}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Box pt={1}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox color=\"secondary\" name=\"showname\" checked={showname} onChange={onShowname} />}\r\n                            label=\"Show in notifications (instead of bot ID)\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"threshold\"\r\n                        name=\"threshold\"\r\n                        label=\"Balancing Threshold (%)\"\r\n                        helperText=\"At what deviation from the target distribution should be rebalanced\"\r\n                        value={threshold}\r\n                        onChange={onThreshold}\r\n                        className={classes.textinput}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <FormControl>\r\n                        <InputLabel>Order Type</InputLabel>\r\n                        <Select\r\n                            labelId=\"order-type\"\r\n                            name=\"ordertype\"\r\n                            value={ordertype}\r\n                            onChange={onOrdertype}\r\n                            className={classes.textinput}\r\n                        >\r\n                            <MenuItem value={'market'}>Market Order</MenuItem>\r\n                            <MenuItem value={'limit-high'}>Limit Order &gt; High-Margin</MenuItem>\r\n                            <MenuItem value={'limit-low'}>Limit Order &gt; Low-Margin</MenuItem>\r\n                        </Select>\r\n                        <FormHelperText>Select the order type to be used for trades</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <FormControl>\r\n                        <InputLabel>Limit Order Time Out</InputLabel>\r\n                        <Select\r\n                            labelId=\"limit-time-out\"\r\n                            name=\"timeout\"\r\n                            value={timeout}\r\n                            onChange={onTimeout}\r\n                            className={classes.textinput}\r\n                            disabled={ordertype === 'market'}\r\n                        >\r\n                            <MenuItem value={10}>10 minutes</MenuItem>\r\n                            <MenuItem value={20}>20 minutes</MenuItem>\r\n                            <MenuItem value={30}>30 minutes</MenuItem>\r\n                            <MenuItem value={60}>60 minutes</MenuItem>\r\n                            <MenuItem value={90}>90 minutes</MenuItem>\r\n                            <MenuItem value={120}>120 minutes</MenuItem>\r\n                        </Select>\r\n                        <FormHelperText>Select the maximum wait time for limit orders to be filled</FormHelperText>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        id=\"emojibuy\"\r\n                        name=\"emojibuy\"\r\n                        label=\"Emoji for Buy Order Notifications\"\r\n                        helperText=\"Configure an emoji to be shown in buy order notifications\"\r\n                        value={emojiBuy}\r\n                        onChange={onEmojiBuy}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">U+</InputAdornment>,\r\n                        }}\r\n                        className={classes.textinput}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Box pt={2}>\r\n                        {emojiBuy !== '' && String.fromCodePoint(`0x${emojiBuy}`)}\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        id=\"emojisell\"\r\n                        name=\"emojisell\"\r\n                        label=\"Emoji for Sell Order Notifications\"\r\n                        helperText=\"Configure an emoji to be shown in sell order notifications\"\r\n                        value={emojiSell}\r\n                        onChange={onEmojiSell}\r\n                        InputProps={{\r\n                            startAdornment: <InputAdornment position=\"start\">U+</InputAdornment>,\r\n                        }}\r\n                        className={classes.textinput}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Box pt={2}>\r\n                        {emojiSell !== '' && String.fromCodePoint(`0x${emojiSell}`)}\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"cooldown\"\r\n                        name=\"cooldown\"\r\n                        label=\"Cooldown Trigger\"\r\n                        helperText=\"After how many orders within 5 minutes should Balance Bot go into 'cooldown' mode (set to 0 to disable)\"\r\n                        value={cooldown}\r\n                        onChange={onCooldown}\r\n                        className={classes.textinput}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"headless\" checked={headless} onChange={onHeadless} />}\r\n                        label=\"Run bot in automatic mode\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ConfigP1 from './ConfigP1';\r\nimport ConfigP2 from './ConfigP2';\r\nimport ConfigP3 from './ConfigP3';\r\nimport ConfigP4 from './ConfigP4';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { socket } from '../context/SocketContext';\r\nimport { useSnackbar } from 'notistack';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\nimport { ServerContext } from '../context/ServerContext';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport { Crypt } from 'hybrid-crypto-js';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    DatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: '1000px',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\nconst steps = ['Exchange API', 'Coin Settings', 'Liquidity Settings', 'General Settings'];\r\n\r\nexport default function ConfigMain() {\r\n    const classes = useStyles();\r\n    const [configuration, setConfiguration] = useContext(ConfigurationContext);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [coinsLoaded, setCoinsLoaded] = useState(false);\r\n    const [input, setInput] = useContext(ConfigurationInputContext);\r\n    const [startingBalance, setStartingBalance] = useContext(StartingBalanceContext);\r\n    const [balances, setBalances] = useContext(BalancesContext);\r\n    const [open, setOpen] = useState(false);\r\n    const { access, publicKey } = useContext(ServerContext)[0];\r\n\r\n    let crypt = new Crypt({\r\n        md: 'sha256',\r\n        rsaStandard: 'RSA-OAEP',\r\n    });\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setInput({ ...configuration, recreate: false });\r\n\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <Button\r\n                style={{\r\n                    color: '#bbbbbb',\r\n                }}\r\n                onClick={() => { closeSnackbar(key) }}>\r\n                Dismiss\r\n            </Button>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const handleNext = () => {\r\n        let error = false;\r\n        if (activeStep === 0) getPortfolio();\r\n        if (activeStep === 1) {\r\n            let match = input.portfolio.find(c => c.coin === input.basecoin);\r\n            if (!match) error = true;   // If 'next' is clicked before coins are loaded, match will be false\r\n            if (match && Number(match.distribution) === 0) error = true; // target distribution of basecoin may not be set to zero\r\n            if (!coinsLoaded) error = true;\r\n        }\r\n        if (activeStep === 3) {\r\n            if (input.botname.length === 0) {\r\n                error = true;\r\n                enqueueSnackbar('Bot name must be defined', {\r\n                    variant: 'error',\r\n                    autoHideDuration: 8000,\r\n                    action,\r\n                });\r\n            }\r\n            if (Number(input.threshold) === 0) {\r\n                error = true;\r\n                enqueueSnackbar('Threshold must be defined', {\r\n                    variant: 'error',\r\n                    autoHideDuration: 8000,\r\n                    action,\r\n                });\r\n            }\r\n            if (input.cooldown === '') {\r\n                error = true;\r\n                enqueueSnackbar('Cooldown trigger must be defined', {\r\n                    variant: 'error',\r\n                    autoHideDuration: 8000,\r\n                    action,\r\n                });\r\n            }\r\n            if (!error) {\r\n                setOpen(true);\r\n                storeConfiguration();\r\n                // Wait for server confirmation below\r\n            }\r\n        }\r\n        if (activeStep !== 3 && !error) setActiveStep(activeStep + 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on(\"portfolio\", data => {\r\n            // data is false if the API key or secret are invalid, or if the server's IP address is not whitelisted on Binance\r\n            if (data === false) setActiveStep(0);\r\n\r\n            if (input.basecoin !== '' && data.length > 0) {\r\n                setCoinsLoaded(true);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"configuration-stored\", () => {\r\n            setConfiguration((prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    apiKey: '************',\r\n                    apiSecret: '************',\r\n                }\r\n            }));\r\n            // Reset starting balances to trigger reload (in case coins were added to portfolio)\r\n            setStartingBalance([]);\r\n            setOpen(false);\r\n            setActiveStep(4);\r\n        });\r\n\r\n        return () => {\r\n            socket.off(\"configuration-stored\");\r\n        }\r\n    }, []);\r\n\r\n    const handleBack = () => {\r\n        if (activeStep === 2) getPortfolio();\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        let newInput = input;\r\n        newInput[e.field] = e.input;\r\n        setInput(newInput);\r\n    }\r\n\r\n    const getPortfolio = () => {\r\n        if (socket && access.allow) socket.emit(\"get-portfolio\", {\r\n            apiKey: input.apiKey,\r\n            apiSecret: input.apiSecret,\r\n            basecoin: input.basecoin,\r\n        }, access.token);\r\n    }\r\n\r\n    const storeConfiguration = () => {\r\n        // Filter out fields that don't have to be stored\r\n        input.portfolio.forEach((coin) => {\r\n            delete coin.currentDistribution;\r\n            delete coin.number;\r\n            delete coin.price;\r\n        });\r\n\r\n        // Remove unneeded field\r\n        delete input.excludedChange;\r\n\r\n        // Filter liquidity changes with number = 0\r\n        let newLiquidity = [];\r\n        input.liquidity.forEach(liq => {\r\n            newLiquidity.push({\r\n                date: liq.date,\r\n                changes: liq.changes.filter(c => c.number !== 0),\r\n            });\r\n        });\r\n        input.liquidity = newLiquidity;\r\n\r\n        // Remove days with zero changes\r\n        newLiquidity = [];\r\n        input.liquidity.forEach(liq => {\r\n            if (liq.changes.length !== 0) {\r\n                newLiquidity.push(liq);\r\n            }\r\n        });\r\n        input.liquidity = newLiquidity;\r\n\r\n        // Remove suggested field\r\n        let liqlast = input.liquidity[input.liquidity.length - 1];\r\n        liqlast.changes.forEach(liq => {\r\n            delete liq.suggested;\r\n        });\r\n\r\n        // Sort liquidity by date\r\n        input.liquidity.sort((a, b) => (a.date > b.date) ? 1 : ((b.date > a.date) ? -1 : 0));\r\n\r\n        if (socket && access.allow) {\r\n            const encryptedInput = {\r\n                ...input,\r\n                apiKey: crypt.encrypt(publicKey, input.apiKey),\r\n                apiSecret: crypt.encrypt(publicKey, input.apiSecret),\r\n            }\r\n            socket.emit(\"store-configuration\", encryptedInput, access.token);\r\n            setConfiguration(input);\r\n            setBalances({});\r\n        }\r\n    }\r\n\r\n    function getStepContent(step) {\r\n        switch (step) {\r\n            case 0:\r\n                return <ConfigP1 callback={handleInput} />;\r\n            case 1:\r\n                return <ConfigP2 callback={handleInput} />;\r\n            case 2:\r\n                return <ConfigP3 callback={handleInput} />;\r\n            case 3:\r\n                return <ConfigP4 callback={handleInput} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <main className={classes.layout}>\r\n                    <Paper className={classes.paper}>\r\n                        <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                            {steps.map((label) => (\r\n                                <Step key={label}>\r\n                                    <StepLabel>{label}</StepLabel>\r\n                                </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                        <React.Fragment>\r\n                            {activeStep === steps.length ? (\r\n                                <React.Fragment>\r\n                                    <Typography variant=\"h5\" gutterBottom>\r\n                                        Configuration has been saved\r\n                                    </Typography>\r\n                                    <Typography variant=\"subtitle1\">\r\n                                        You can now leave this page\r\n                                    </Typography>\r\n                                </React.Fragment>\r\n                            ) : (\r\n                                <React.Fragment>\r\n                                    {getStepContent(activeStep)}\r\n                                    <div className={classes.buttons}>\r\n                                        {activeStep !== 0 && (\r\n                                            <Button onClick={handleBack} className={classes.button}>\r\n                                                Back\r\n                                            </Button>\r\n                                        )}\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            onClick={handleNext}\r\n                                            className={classes.button}\r\n                                        >\r\n                                            {activeStep === steps.length - 1 ? 'Save Configuration' : 'Next'}\r\n                                        </Button>\r\n                                    </div>\r\n                                </React.Fragment>\r\n                            )}\r\n                        </React.Fragment>\r\n                    </Paper>\r\n                </main>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ConfigMain from \"../components/ConfigMain\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\nconst Configuration = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Configuration\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ConfigMain />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Configuration;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport FavoriteTwoToneIcon from '@material-ui/icons/FavoriteTwoTone';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst data =\r\n{\r\n  'BTC': {\r\n    logo: '/logo-btc.png',\r\n    address: '1NS1gD6BjM2zud7W9sVvDsesoq6NfNpqrb',\r\n    network: 'Bitcoin (BTC)',\r\n    qr: '/qr-btc.png',\r\n  },\r\n  'ETH / PAXG': {\r\n    logo: '/logo-eth.png',\r\n    address: '0x03a03ad6123d85d3015b5d6bc2064e73acbff85b',\r\n    network: 'Ethereum (ETH / ERC20)',\r\n    qr: '/qr-eth.png',\r\n  },\r\n  'BNB / BUSD / USDT / ETH': {\r\n    logo: '/logo-bnb.png',\r\n    address: '0x03a03ad6123d85d3015b5d6bc2064e73acbff85b',\r\n    network: 'Binance Smart Chain (BEP20)',\r\n    qr: '/qr-bnb.png',\r\n  },\r\n};\r\n\r\nconst Deposit = (props) => {\r\n  const { type } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Paper style={{ height: '160px', minWidth: '750px', maxWidth: '1000px' }} className={classes.paper}>\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Grid item xs={3}>\r\n            <img src={data[type].logo} alt={\"logo-\" + type} height=\"120px\" />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <p>\r\n              <b>{type}</b> deposit address:\r\n            </p>\r\n            <p>\r\n              <b>{data[type].address}</b>\r\n            </p>\r\n            <p>\r\n              Network Name: <b>{data[type].network}</b>\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <img src={data[type].qr} alt={\"QR-\" + type} />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst Support = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container item spacing={3} direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\">\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h3\" noWrap>\r\n            Support Us\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Paper style={{ minWidth: '750px', maxWidth: '1000px' }} className={classes.paper}>\r\n            <p>\r\n              We hope that you're enjoying Balance Bot. The Balance Bot team develops the application in their spare time, and they're not getting paid for the work they do. Their wish is to <b>keep Balance Bot for free forever</b>. And you can help.\r\n            </p>\r\n            <p>\r\n              If you're an enthusiastic Balance Bot user, please considering contributing through the options below. Thank you so much! <FavoriteTwoToneIcon fontSize=\"small\" color=\"secondary\" />\r\n            </p>\r\n            <p>\r\n              The deposit addresses below are all on Binance, which makes it possible to transfer coins <b>without transaction fees</b> from your own Binance account. For more information, see <Link href=\"https://www.binance.com/en/support/faq/360037037312\" target=\"_blank\" rel=\"noopener\" color=\"secondary\">here</Link>. Note: Binance does show a transaction fee, but it will not be charged.\r\n            </p>\r\n            <p>\r\n              Donations are anonymous, but feel free to let us know about your generosity and <Link href=\"https://t.me/hodlerhacks\" target=\"_blank\" rel=\"noopener\" color=\"secondary\">send us a message</Link>.\r\n            </p>\r\n          </Paper>\r\n        </Grid>\r\n        <Deposit type=\"BTC\" />\r\n        <Deposit type=\"ETH / PAXG\" />\r\n        <Deposit type=\"BNB / BUSD / USDT / ETH\" />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\nexport default Support;\r\n","import PieChartIcon from '@material-ui/icons/PieChart';\r\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Portfolio from '../pages/Portfolio';\r\nimport PPerformance from '../pages/PPerformance';\r\nimport CoinAnalysis from '../pages/CoinAnalysis';\r\nimport EventHistory from '../pages/EventHistory';\r\nimport Configuration from '../pages/Configuration';\r\nimport Support from '../pages/Support';\r\n\r\nconst routesUp = [\r\n  {\r\n    path: 'portfolio',\r\n    sidebarName: 'Portfolio',\r\n    icon: PieChartIcon,\r\n    component: Portfolio,\r\n  },\r\n  {\r\n    path: 'performance',\r\n    sidebarName: 'Performance',\r\n    icon: BarChartIcon,\r\n    component: PPerformance,\r\n  },\r\n  {\r\n    path: 'coins',\r\n    sidebarName: 'Coin Analysis',\r\n    icon: ShowChartIcon,\r\n    component: CoinAnalysis,\r\n  },\r\n  {\r\n    path: 'history',\r\n    sidebarName: 'Event History',\r\n    icon: HistoryIcon,\r\n    component: EventHistory,\r\n  },\r\n];\r\n\r\nconst routesDown = [\r\n  {\r\n    path: 'configuration',\r\n    sidebarName: 'Configuration',\r\n    icon: SettingsIcon,\r\n    component: Configuration,\r\n  },\r\n  {\r\n    path: 'support',\r\n    sidebarName: 'Support Us',\r\n    icon: FavoriteIcon,\r\n    component: Support,\r\n  }\r\n];\r\n\r\nexport { routesUp, routesDown };","import React, { useContext, useState, useEffect } from 'react';\r\nimport { makeStyles, withStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Link, Switch, Route, Redirect, useHistory } from 'react-router-dom';\r\nimport Link2 from '@material-ui/core/Link';\r\nimport { generatePath } from \"react-router\";\r\nimport DMSwitch from '@material-ui/core/Switch';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { useLocalStore } from \"../services/LocalStoreService\";\r\nimport { FiatContext } from '../context/FiatContext';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { ServerContext } from '../context/ServerContext';\r\nimport { routesUp, routesDown } from '../routes/Routes';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport pckg2 from '../version2.json';\r\nimport { socket } from '../context/SocketContext';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  logo: {\r\n    maxWidth: 60,\r\n    padding: 10,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    height: '100%',\r\n  },\r\n  drawerContainer: {\r\n    overflow: 'auto',\r\n  },\r\n  settingsPaper: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  content: {\r\n    justify: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  footer: {\r\n    // padding: theme.spacing(1),\r\n    marginTop: 'auto',\r\n    backgroundColor: '#000000',\r\n  },\r\n  bottomPush: {\r\n    position: \"fixed\",\r\n    width: '100%',\r\n    bottom: 0,\r\n    paddingBottom: 0,\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  bottomPush2: {\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    paddingBottom: 80,\r\n  },\r\n  smallScreenToggles: {\r\n    maxWidth: '100%',\r\n    bottom: 0,\r\n    paddingBottom: 80,\r\n    paddingTop: 10,\r\n  },\r\n}));\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Box color=\"#FFF\" height={54} p={2}>\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link2 style={{ color: '#ffffff', textDecoration: 'none' }} href=\"https://hodlerhacks.com/\" target=\"_blank\" rel=\"noopener\">\r\n          hodlerhacks.com\r\n        </Link2>{' '}\r\n        {new Date().getFullYear()}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 12,\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default function Main() {\r\n  const history = useHistory();\r\n  const version = pckg2.version;\r\n\r\n  const [mode, setMode] = useLocalStore('mode', 'light');\r\n  const [fiatStore, setFiatStore] = useLocalStore('fiat', 'EUR');\r\n  const [fiat, setFiat] = useContext(FiatContext);\r\n  const [configuration, setConfiguration] = useContext(ConfigurationContext);\r\n  const [modus, setModus] = useState('manual');\r\n  const [{ status, serverversion, servertime, access, publicKey }, setServer] = useContext(ServerContext);\r\n  const [outdated, setOutdated] = useState(false);\r\n  const [open, setOpen] = useState(true);\r\n  const [disconnected, setDisconnected] = useState(false);\r\n  const [modusSwitchDisabled, setModusSwitchDisabled] = useState(window.location.pathname.includes('/configuration'));\r\n  const [flexWidthDown, setFlexWidthDown] = useState(0);\r\n  const [flexWidthUp, setFlexWidthUp] = useState(0);\r\n  const [overlayMenu, setOverlayMenu] = useState(false);\r\n  const latestVersion = localStorage.getItem('latest-version'); // read-only, as latest version is set by Bot Manager\r\n\r\n  const getBotPath = () => {\r\n    const pathname = window.location.pathname;\r\n    const result = pathname.match(/bot[0-9]{3}/);\r\n\r\n    if (result)\r\n      return result[0];\r\n    else\r\n      return null;\r\n  }\r\n\r\n  const [botPath, setBotPath] = useState(getBotPath());\r\n\r\n  const getPath = (page) => {\r\n    if (botPath) {\r\n      return generatePath(\"/:bot/:page\", {\r\n        bot: botPath,\r\n        page: page,\r\n      });\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  const handleRefresh = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDisconnected(status === 'disconnected' && Object.keys(configuration).length !== 0)\r\n\r\n    return () => {\r\n    }\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    document.title = `BB | Bot Dashboard`;\r\n\r\n    // Listen to local store changes (when toggled on another page)\r\n    window.addEventListener('storage', () => {\r\n      const newMode = localStorage.getItem('mode');\r\n      setMode(newMode);\r\n      const newFiat = localStorage.getItem('fiat');\r\n      setFiat(newFiat);\r\n    });\r\n\r\n    return () => {\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setOpen(status !== 'connected' || Object.keys(configuration).length === 0);\r\n    return () => {\r\n    }\r\n  }, [status, configuration]);\r\n\r\n  useEffect(() => {\r\n    setModus(configuration.headless ? 'auto' : 'manual');\r\n\r\n    return () => {\r\n    }\r\n  }, [configuration]);\r\n\r\n  useEffect(() => {\r\n    const unlisten = history.listen((location) => {\r\n      setModusSwitchDisabled(location.pathname === '/configuration');\r\n      setBotPath(getBotPath());\r\n    });\r\n    // Clean up the event listener\r\n    return () => {\r\n      unlisten();\r\n    };\r\n  }, [history])\r\n\r\n  useEffect(() => {\r\n    const outdated = (serverversion && (serverversion !== '0.0' && serverversion !== version));\r\n    setOutdated(outdated);\r\n\r\n    return () => {\r\n    }\r\n  }, [serverversion]);\r\n\r\n  useEffect(() => {\r\n    let wdtDown = 0;\r\n    let wdtUp = 0;\r\n    const update = latestVersion > version;\r\n    const logout = access && access.token;\r\n\r\n    if (update) {\r\n      wdtDown += 140;\r\n    }\r\n    if (logout) {\r\n      wdtDown += 50;\r\n      wdtUp += 50;\r\n    }\r\n\r\n    setFlexWidthDown(wdtDown);\r\n    setFlexWidthUp(wdtUp);\r\n\r\n    return () => {\r\n    }\r\n  }, [latestVersion, version, access]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleDarkmode = (e) => {\r\n    (mode === 'light') ? setMode('dark') : setMode('light');\r\n  }\r\n\r\n  const handleFiat = (e) => {\r\n    if (fiat === 'EUR') {\r\n      setFiat('USD');\r\n      setFiatStore('USD');\r\n    } else {\r\n      setFiat('EUR');\r\n      setFiatStore('EUR');\r\n    }\r\n  }\r\n\r\n  const handleModus = (e) => {\r\n    const newModus = (modus === 'auto') ? 'manual' : 'auto';\r\n    const headless = (newModus === 'auto');\r\n    setModus(newModus);\r\n    if (socket && access.allow) socket.emit(\"store-headless\", {\r\n      headless: headless,\r\n    }, access.token);\r\n  }\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: mode\r\n    }\r\n  });\r\n\r\n  const StyledButton = withStyles({\r\n    root: {\r\n      '&:hover': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n      '&:click': {\r\n        backgroundColor: '#f00',\r\n      },\r\n      justifyContent: 'flex-start',\r\n    },\r\n  })(Button);\r\n\r\n  const onLogout = () => {\r\n    if (socket) socket.emit(\"logout\", access.token);\r\n    setServer({\r\n      status: status,\r\n      serverversion: serverversion,\r\n      servertime: servertime,\r\n      access: {\r\n        allow: false,\r\n        reason: 'logged out',\r\n        token: null,\r\n      },\r\n      publicKey: publicKey,\r\n    });\r\n  };\r\n\r\n  const backHome = () => {\r\n    let openUrl = window.location.origin;\r\n    if (openUrl.includes(':4000')) openUrl = openUrl.replace(':4000', ':5000'); // For development only\r\n\r\n    window.open(openUrl, '_blank', 'noopener');\r\n  }\r\n\r\n  const cleanBotname = (name) => {\r\n    if (name && name.charAt(0) === '^') name = name.slice(1);\r\n\r\n    return name;\r\n  }\r\n\r\n  const toggleOverlayMenu = (open) => {\r\n    setOverlayMenu(open);\r\n  }\r\n\r\n  const SideMenu = (props) => {\r\n    const showToolbar = props.showToolbar;\r\n    return (\r\n      <Grid item xs={12}>\r\n        {showToolbar && (\r\n          <Toolbar />\r\n        )}\r\n        {(configuration.apiKey !== '') ? (\r\n          <div className={classes.drawerContainer}>\r\n            <List>\r\n              {routesUp.map((prop, key) => {\r\n                return (\r\n                  <Link to={getPath(prop.path)} style={{ textDecoration: 'none' }} onClick={() => toggleOverlayMenu(false)} key={key}>\r\n                    <ListItem button key={prop.sidebarName}>\r\n                      <ListItemIcon><prop.icon /></ListItemIcon>\r\n                      <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                    </ListItem>\r\n                  </Link>\r\n                );\r\n              })}\r\n            </List>\r\n            <Divider />\r\n            {routesDown.map((prop, key) => {\r\n              return (\r\n                <Link to={getPath(prop.path)} style={{ textDecoration: 'none' }} onClick={() => toggleOverlayMenu(false)} key={key}>\r\n                  <ListItem button key={prop.sidebarName}>\r\n                    <ListItemIcon><prop.icon /></ListItemIcon>\r\n                    <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                  </ListItem>\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className={classes.drawerContainer}>\r\n            <List>\r\n              {routesUp.map((prop, key) => {\r\n                return (\r\n                  <Redirect to={getPath('configuration')} style={{ textDecoration: 'none' }} onClick={() => toggleOverlayMenu(false)} key={key}>\r\n                    <ListItem button key={prop.sidebarName}>\r\n                      <ListItemIcon><prop.icon /></ListItemIcon>\r\n                      <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                    </ListItem>\r\n                  </Redirect>\r\n                );\r\n              })}\r\n            </List>\r\n            <Divider />\r\n            {routesDown.slice(0, 1).map((prop, key) => {\r\n              return (\r\n                <Link to={getPath(prop.path)} style={{ textDecoration: 'none' }} onClick={() => toggleOverlayMenu(false)} key={key}>\r\n                  <ListItem button key={prop.sidebarName}>\r\n                    <ListItemIcon><prop.icon /></ListItemIcon>\r\n                    <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                  </ListItem>\r\n                </Link>\r\n              );\r\n            })}\r\n            {routesDown.slice(1, routesDown.length).map((prop, key) => {\r\n              return (\r\n                <Redirect to={getPath('configuration')} style={{ textDecoration: 'none' }} onClick={() => toggleOverlayMenu(false)} key={key}>\r\n                  <ListItem button key={prop.sidebarName}>\r\n                    <ListItemIcon><prop.icon /></ListItemIcon>\r\n                    <ListItemText primary={prop.sidebarName} primaryTypographyProps={{ variant: 'button', color: 'textPrimary' }} />\r\n                  </ListItem>\r\n                </Redirect>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (<ThemeProvider theme={theme}>\r\n    {!outdated ? (\r\n      <React.Fragment>\r\n        <Backdrop className={classes.backdrop} open={open}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n          <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <Hidden lgUp>\r\n                <Grid item>\r\n                  <LightTooltip title=\"Menu\">\r\n                    <IconButton onClick={() => toggleOverlayMenu(true)}>\r\n                      <MenuIcon style={{ color: '#fff' }} />\r\n                    </IconButton>\r\n                  </LightTooltip>\r\n                </Grid>\r\n              </Hidden>\r\n              <ButtonBase onClick={backHome}>\r\n                <img src=\"/logo192.png\" alt=\"Balance Bot Logo\" className={classes.logo} />\r\n              </ButtonBase>\r\n              <Grid container direction=\"row\" alignItems=\"center\" nowrap=\"true\">\r\n                <Grid item xs zeroMinWidth>\r\n                  <Box mt={1.5}>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                      Balance Bot | {cleanBotname(configuration.botname)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box mt={-1} style={{ color: '#959FD6' }}>\r\n                    <Typography variant=\"caption\" color=\"inherit\" noWrap>\r\n                      v{version}\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n                <Hidden xsDown>\r\n                  <FlexToolbar wdt={flexWidthDown} update={latestVersion > version} logout={access && access.token} onLogout={onLogout} />\r\n                </Hidden>\r\n                <Hidden smUp>\r\n                  <FlexToolbar wdt={flexWidthUp} update={latestVersion > version} logout={access && access.token} onLogout={onLogout} />\r\n                </Hidden>\r\n              </Grid>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Hidden mdDown>\r\n            <Drawer className={classes.drawer} variant=\"permanent\">\r\n              <Paper className={classes.drawerPaper}>\r\n                <Grid container direction=\"column\">\r\n                  <SideMenu showToolbar={true} />\r\n                  <div className={classes.bottomPush2}>\r\n                    <Box pl={1}>\r\n                      <Grid container item xs={12} alignItems=\"center\" justify=\"flex-end\" style={{ width: '200px' }}>\r\n                        <Grid item xs={8}>\r\n                          <FormControlLabel\r\n                            onChange={handleDarkmode}\r\n                            value={mode}\r\n                            control={<DMSwitch checked={mode === 'dark'} color=\"secondary\" />}\r\n                            label={<Typography variant=\"button\">Light&nbsp;&nbsp;&nbsp;&nbsp;</Typography>}\r\n                            labelPlacement=\"start\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                          <StyledButton disableRipple onClick={handleDarkmode}><Typography variant=\"button\">Dark</Typography></StyledButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid container item xs={12} alignItems=\"center\" justify=\"flex-end\" style={{ width: '200px' }}>\r\n                        <Grid item xs={8}>\r\n                          <FormControlLabel\r\n                            onChange={handleFiat}\r\n                            value={fiat}\r\n                            control={<DMSwitch checked={fiat === 'EUR'} color=\"secondary\" />}\r\n                            label={<Typography variant=\"button\">USD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Typography>}\r\n                            labelPlacement=\"start\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                          <StyledButton disableRipple onClick={handleFiat}><Typography variant=\"button\">EUR</Typography></StyledButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid container item xs={12} alignItems=\"center\" justify=\"flex-end\" style={{ width: '200px' }}>\r\n                        <Grid item xs={8}>\r\n                          <FormControlLabel\r\n                            disabled={modusSwitchDisabled}\r\n                            onChange={handleModus}\r\n                            value={modus}\r\n                            control={<DMSwitch checked={modus === 'auto'} color=\"secondary\" />}\r\n                            label={<Typography variant=\"button\">Manual</Typography>}\r\n                            labelPlacement=\"start\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                          <StyledButton disableRipple onClick={handleModus}><Typography variant=\"button\">Auto</Typography></StyledButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Box>\r\n                  </div>\r\n                </Grid>\r\n              </Paper>\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden lgUp>\r\n            {overlayMenu && (\r\n              <Drawer className={classes.drawer} open={overlayMenu} onClose={() => toggleOverlayMenu(false)} variant=\"temporary\">\r\n                <Paper className={classes.drawerPaper}>\r\n                  <Grid item>\r\n                    <LightTooltip title=\"Close\">\r\n                      <IconButton onClick={() => toggleOverlayMenu(false)}>\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    </LightTooltip>\r\n                  </Grid>\r\n                  <Grid container direction=\"column\">\r\n                    <SideMenu showToolbar={false} />\r\n                  </Grid>\r\n                </Paper>\r\n              </Drawer>\r\n            )}\r\n          </Hidden>\r\n          <main className={classes.content}>\r\n            <Toolbar />\r\n            <Switch>\r\n              <Route exact path={'/:bot'}>\r\n                {(configuration.apiKey !== '') ? (\r\n                  <Redirect to={getPath('portfolio')} />\r\n                ) : (\r\n                  <Redirect to={getPath('configuration')} />\r\n                )}\r\n              </Route>\r\n              {routesUp.map((prop, key) => {\r\n                return (\r\n                  <Route exact path={'/:bot/' + prop.path} component={prop.component} key={key} />\r\n                );\r\n              })}\r\n              {routesDown.map((prop, key) => {\r\n                return (\r\n                  <Route exact path={'/:bot/' + prop.path} component={prop.component} key={key} />\r\n                );\r\n              })}\r\n            </Switch>\r\n            <Hidden lgUp>\r\n              <div className={classes.smallScreenToggles}>\r\n                <Paper className={classes.settingsPaper}>\r\n                  <Box pl={1}>\r\n                    <Grid container direction=\"column\">\r\n                      <Grid container item xs={12} alignItems=\"center\" justify=\"flex-end\" style={{ maxWidth: '220px' }}>\r\n                        <Grid item xs={7}>\r\n                          <FormControlLabel\r\n                            onChange={handleDarkmode}\r\n                            value={mode}\r\n                            control={<DMSwitch checked={mode === 'dark'} color=\"secondary\" />}\r\n                            label={<Typography variant=\"button\">Light&nbsp;&nbsp;&nbsp;&nbsp;</Typography>}\r\n                            labelPlacement=\"start\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                          <StyledButton disableRipple onClick={handleDarkmode}><Typography variant=\"button\">Dark</Typography></StyledButton>\r\n                        </Grid>\r\n                        <Grid item xs={2}></Grid>\r\n                      </Grid>\r\n                      <Grid container item xs={12} alignItems=\"center\" justify=\"flex-end\" style={{ maxWidth: '220px' }}>\r\n                        <Grid item xs={7}>\r\n                          <FormControlLabel\r\n                            onChange={handleFiat}\r\n                            value={fiat}\r\n                            control={<DMSwitch checked={fiat === 'EUR'} color=\"secondary\" />}\r\n                            label={<Typography variant=\"button\">USD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</Typography>}\r\n                            labelPlacement=\"start\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                          <StyledButton disableRipple onClick={handleFiat}><Typography variant=\"button\">EUR</Typography></StyledButton>\r\n                        </Grid>\r\n                        <Grid item xs={2}></Grid>\r\n                      </Grid>\r\n                      <Grid container item xs={12} alignItems=\"center\" justify=\"flex-end\" style={{ maxWidth: '220px' }}>\r\n                        <Grid item xs={7}>\r\n                          <FormControlLabel\r\n                            disabled={modusSwitchDisabled}\r\n                            onChange={handleModus}\r\n                            value={modus}\r\n                            control={<DMSwitch checked={modus === 'auto'} color=\"secondary\" />}\r\n                            label={<Typography variant=\"button\">Manual</Typography>}\r\n                            labelPlacement=\"start\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                          <StyledButton disableRipple onClick={handleModus}><Typography variant=\"button\">Auto</Typography></StyledButton>\r\n                        </Grid>\r\n                        <Grid item xs={2}></Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Paper>\r\n              </div>\r\n            </Hidden>\r\n          </main>\r\n        </div>\r\n        {/* </BrowserRouter> */}\r\n        <div style={{ height: 70 }}>\r\n          &nbsp;\r\n        </div>\r\n      </React.Fragment >\r\n    ) : (\r\n      <Dialog\r\n        open={true}\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Typography variant=\"overline\" color=\"secondary\">\r\n              New version has been installed\r\n            </Typography>\r\n            <DialogContentText>\r\n            </DialogContentText>\r\n            <Typography variant=\"overline\" color=\"textPrimary\">\r\n              Please refresh the browser window to load the latest version\r\n            </Typography>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" onClick={handleRefresh} color=\"secondary\">\r\n            Refresh\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n    }\r\n    <div className={classes.bottomPush}>\r\n      <footer className={classes.footer}>\r\n        <Grid container alignItems=\"center\">\r\n          <Grid item xs={false} sm={12} md={12}>\r\n            <Copyright />\r\n          </Grid>\r\n        </Grid>\r\n      </footer>\r\n    </div>\r\n  </ThemeProvider >\r\n  )\r\n}\r\n\r\nconst FlexToolbar = (props) => {\r\n  const { wdt, update, logout, onLogout } = props;\r\n\r\n  return (\r\n    <Grid item xs container direction=\"row\" alignItems=\"center\" justify=\"flex-end\" style={{ maxWidth: wdt }}>\r\n      {(update) && (\r\n        <Hidden xsDown>\r\n          <Grid item style={{ width: '130px' }}>\r\n            <LightTooltip title=\"Install update in Bot Manager\">\r\n              <Chip label='Update Available' style={{ backgroundColor: '#959FD6', color: 'white' }} />\r\n            </LightTooltip>\r\n          </Grid>\r\n        </Hidden>\r\n      )}\r\n      {(logout) && (\r\n        <Grid item style={{ width: '48px' }}>\r\n          <LightTooltip title=\"Logout\">\r\n            <IconButton onClick={onLogout}>\r\n              <ExitToAppIcon style={{ color: '#ffffff' }} />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link2 from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useLocalStore } from \"../services/LocalStoreService\";\r\nimport { ServerContext } from '../context/ServerContext';\r\nimport { useSnackbar } from 'notistack';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport pckg2 from '../version2.json';\r\nimport { socket } from '../context/SocketContext';\r\nimport { Crypt } from 'hybrid-crypto-js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    logo: {\r\n        maxWidth: 60,\r\n        padding: 10,\r\n    },\r\n    content: {\r\n        justify: \"flex-start\",\r\n        alignItems: \"flex-start\",\r\n        flexGrow: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    footer: {\r\n        marginTop: 'auto',\r\n        backgroundColor: '#000000',\r\n    },\r\n    bottomPush: {\r\n        position: \"fixed\",\r\n        width: '100%',\r\n        bottom: 0,\r\n        paddingBottom: 0,\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n}));\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Box color=\"#FFF\" height={54} p={2}>\r\n            <Typography variant=\"body2\" align=\"center\">\r\n                {'Copyright © '}\r\n                <Link2 style={{ color: '#ffffff', textDecoration: 'none' }} href=\"https://hodlerhacks.com/\" target=\"_blank\" rel=\"noopener\">\r\n                    hodlerhacks.com\r\n                </Link2>{' '}\r\n                {new Date().getFullYear()}\r\n            </Typography>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default function Public() {\r\n    const version = pckg2.version;\r\n\r\n    const [mode, setMode] = useLocalStore('mode', 'light');\r\n    const [{ status, access, serverversion, publicKey }, setServer] = useContext(ServerContext);\r\n    const [loginNow, setLoginNow] = useState(false);\r\n    const [accessMsg, setAccessMsg] = useState('initial state');\r\n    const [serverDown, setServerDown] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    let crypt = new Crypt({\r\n        md: 'sha256',\r\n        rsaStandard: 'RSA-OAEP',\r\n    });\r\n\r\n    useEffect(() => {\r\n        document.title = `BB | Bot Dashboard`;\r\n\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (status === 'disconnected')\r\n            // If status remains in disconnected state for too long, the server is down\r\n            setTimeout(() => {\r\n                if (status === 'disconnected') setServerDown(true);\r\n            }, 5000);\r\n        else\r\n            setServerDown(false);\r\n\r\n        return () => {\r\n        }\r\n    }, [status]);\r\n\r\n    useEffect(() => {\r\n        if (access) {\r\n            setLoginNow(false);\r\n            setServerDown(false);\r\n            if (access.allow === true) {\r\n                setAccessMsg('');\r\n            } else if (access.allow === false && access.reason === 'login required') {\r\n                setAccessMsg(\"Please log in\");\r\n                setLoginNow(true);\r\n            } else if (access.allow === false && access.reason === '2FA required') {\r\n                setAccessMsg(\"Add your client's IP address to the IP whitelist, or temporarily allow access through your Telegram bot\");\r\n            } else if (access.allow === false && access.reason === 'temporary access not allowed') {\r\n                setAccessMsg(\"Add your client's IP address to the IP whitelist\");\r\n            } else if (access.allow === false && access.reason === 'access timeout') {\r\n                handleRefresh();\r\n            } else if (access.allow === false && access.reason === 'temporary access timeout') {\r\n                setAccessMsg(\"Your temporary access has expired\");\r\n            } else if (access.allow === false && access.reason === '2FA login required') {\r\n                setAccessMsg(\"2FA required - approve login through your Telegram bot\");\r\n            } else if (access.allow === false && access.reason === 'invalid credentials') {\r\n                setAccessMsg(\"Incorrect username or password - please try again\");\r\n                setLoginNow(true);\r\n            } else if (access.allow === false && access.reason === '2FA login rejected') {\r\n                setAccessMsg(\"2FA login was rejected\");\r\n            } else if (access.allow === false && access.reason === 'temporary access rejected') {\r\n                setAccessMsg(\"Temporary access was rejected\");\r\n            } else if (access.allow === false && access.reason === 'logged out') {\r\n                handleRefresh();\r\n            } else if (access.allow === false && access.reason === 'initial state') {\r\n                setAccessMsg(\"initial state\");\r\n                // If access.reason remains in intial state for too long, the server is down\r\n                setTimeout(() => {\r\n                    if (access.reason === 'initial state') setServerDown(true);\r\n                }, 4000);\r\n            } else if (access.allow === false && access.reason === 'reload') {\r\n                handleRefresh();\r\n            }\r\n        }\r\n\r\n        return () => {\r\n        }\r\n    }, [access]);\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: mode\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const onLoginInput = (e) => {\r\n        if (e.target.id === 'username') setUsername(e.target.value);\r\n        if (e.target.id === 'password') setPassword(e.target.value);\r\n    }\r\n\r\n    const onSignIn = () => {\r\n        const timestamp = new Date().getTime();\r\n\r\n        if (socket) socket.emit(\"login\", {\r\n            username: username,\r\n            password: crypt.encrypt(publicKey, `${password}@${timestamp}`),\r\n        });\r\n    }\r\n\r\n    const handleRefresh = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <Button\r\n                style={{\r\n                    color: '#bbbbbb',\r\n                }}\r\n                onClick={() => { closeSnackbar(key) }}>\r\n                Dismiss\r\n            </Button>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const handleForgotPassword = () => {\r\n        if (socket) socket.emit(\"reset-password\");\r\n        enqueueSnackbar('See your Telegram bot to reset password', {\r\n            variant: 'success',\r\n            autoHideDuration: 8000,\r\n            action,\r\n        });\r\n    }\r\n\r\n    return (<ThemeProvider theme={theme}>\r\n        <React.Fragment>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <img src=\"/logo192.png\" alt=\"Balance Bot Logo\" className={classes.logo} />\r\n                        <Grid container direction=\"row\" alignItems=\"center\" nowrap=\"true\">\r\n                            <Grid item xs zeroMinWidth>\r\n                                <Box mt={1.5}>\r\n                                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                                        Balance Bot\r\n                                    </Typography>\r\n                                </Box>\r\n                                <Box mt={-1} style={{ color: '#959FD6' }}>\r\n                                    <Typography variant=\"caption\" color=\"inherit\" noWrap>\r\n                                        v{version}\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <main className={classes.content}>\r\n                    <Toolbar />\r\n                </main>\r\n            </div>\r\n            {/* </BrowserRouter> */}\r\n        </React.Fragment>\r\n        {status === 'disconnected' && accessMsg !== 'initial state' ? (\r\n            <Dialog\r\n                open={serverDown}\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n            >\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography variant=\"overline\" color=\"secondary\">\r\n                            The connection with the server has been lost\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                    <DialogContentText>\r\n                        <Typography variant=\"overline\" color=\"textPrimary\">\r\n                            Your bot may have stopped running\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" onClick={handleRefresh} color=\"secondary\">\r\n                        Retry\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : !loginNow ? (accessMsg === 'initial state') ? (\r\n            <Dialog\r\n                open={serverDown}\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n            >\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography variant=\"overline\" color=\"secondary\">\r\n                            Balance Bot seems to be down\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                    <DialogContentText>\r\n                        <Typography variant=\"overline\" color=\"textPrimary\">\r\n                            Please check your server and try again\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent >\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" onClick={handleRefresh} color=\"secondary\">\r\n                        Retry\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog >\r\n        ) : !access.allow && (\r\n            <Dialog\r\n                open={true}\r\n                fullWidth={true}\r\n                maxWidth={'sm'}\r\n            >\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography variant=\"overline\" color=\"secondary\">\r\n                            Notification\r\n                        </Typography>\r\n                    </DialogContentText >\r\n                    <DialogContentText>\r\n                        <Typography variant=\"overline\" color=\"textPrimary\">\r\n                            {accessMsg}\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent >\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" onClick={handleRefresh} color=\"secondary\">\r\n                        Back\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog >\r\n        ) : (\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <Dialog\r\n                    open={true}\r\n                    fullWidth={true}\r\n                    maxWidth={'sm'}\r\n                >\r\n                    <DialogTitle>{accessMsg}</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"username\"\r\n                            label=\"Username\"\r\n                            name=\"username\"\r\n                            onChange={onLoginInput}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={onLoginInput}\r\n                        />\r\n                        <Box m={3} />\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            onClick={onSignIn}\r\n                        >\r\n                            Log In\r\n                        </Button>\r\n                        <Box m={3} />\r\n                        <Button fullWidth onClick={handleForgotPassword} color=\"default\" style={{ fontSize: '10px' }}>\r\n                            Forgot password\r\n                        </Button>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </React.Fragment>\r\n        )\r\n        }\r\n        <div className={classes.bottomPush}>\r\n            <footer className={classes.footer}>\r\n                <Grid container alignItems=\"center\">\r\n                    <Grid item xs={false} sm={12} md={12}>\r\n                        <Copyright />\r\n                    </Grid>\r\n                </Grid>\r\n            </footer>\r\n        </div>\r\n    </ThemeProvider >\r\n    )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport Main from './Main';\r\nimport Public from './Public';\r\nimport { ServerContext } from '../context/ServerContext';\r\n\r\nfunction Switch() {\r\n    const { status, access } = useContext(ServerContext)[0];\r\n    const [goPublic, setGoPublic] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setGoPublic(!access.allow || status === 'disconnected');\r\n\r\n        return () => {\r\n        }\r\n    }, [access, status]);\r\n\r\n    return (\r\n        <div>\r\n            {goPublic ? (\r\n                <Public />\r\n            ) : (\r\n                <Main />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Switch;","import React, { useEffect, useContext } from \"react\";\r\nimport { useSnackbar } from 'notistack';\r\nimport { socket } from '../context/SocketContext';\r\nimport { ServerContext } from '../context/ServerContext';\r\nimport { BalancesContext } from '../context/BalancesContext';\r\nimport { PerformanceContext } from '../context/PerformanceContext';\r\nimport { ConfigurationContext } from '../context/ConfigurationContext';\r\nimport { ConfigurationInputContext } from '../context/ConfigurationInputContext';\r\nimport { StartingBalanceContext } from '../context/StartingBalanceContext';\r\nimport { FiatContext } from '../context/FiatContext';\r\nimport Button from '@material-ui/core/Button';\r\nimport pckg2 from '../version2.json';\r\n\r\nexport default function SocketService() {\r\n    const version = pckg2.version;\r\n\r\n    const [{ status, serverversion }, setServer] = useContext(ServerContext);\r\n    const [balances, setBalances] = useContext(BalancesContext);\r\n    const [performance, setPerformance] = useContext(PerformanceContext);\r\n    const { access } = useContext(ServerContext)[0];\r\n    const [configuration, setConfiguration] = useContext(ConfigurationContext);\r\n    const [configurationInput, setConfigurationInput] = useContext(ConfigurationInputContext);\r\n    const [startingBalance, setStartingBalance] = useContext(StartingBalanceContext);\r\n    const fiat = useContext(FiatContext)[0];\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const action = key => (\r\n        <React.Fragment>\r\n            <Button\r\n                style={{\r\n                    color: '#bbbbbb',\r\n                }}\r\n                onClick={() => { closeSnackbar(key) }}>\r\n                Dismiss\r\n            </Button>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const handleEvent = (log, summary) => {\r\n        const variant = (log.type === 'order') ? 'info' : log.type;\r\n        enqueueSnackbar(summary, {\r\n            variant: variant,\r\n            autoHideDuration: 8000,\r\n            action,\r\n        });\r\n    };\r\n\r\n    const updatePerformance = () => {\r\n        const rows = (balances.portfolio) ? JSON.parse(balances.portfolio) : [];\r\n        let update = [];\r\n\r\n        if (performance.length !== 0) {\r\n            const today = performance[performance.length - 1].coins;\r\n\r\n            rows.forEach((coin) => {\r\n                const match = today.find(c => c.coin === coin.coin);\r\n                update.push({\r\n                    ...match,\r\n                    number: coin.number,\r\n                    price: coin.last,\r\n                });\r\n            });\r\n\r\n            let newPerformance = [...performance];\r\n            newPerformance[newPerformance.length - 1].coins = update;\r\n            newPerformance[newPerformance.length - 1].eur = balances.eur;\r\n            newPerformance[newPerformance.length - 1].usd = balances.usd;\r\n            setPerformance(newPerformance);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // Reload page on server startup if new BB version has been installed, to make sure server and client are in sync\r\n        if (status === 'starting' && serverversion !== '0.0' && version !== serverversion) window.location.reload();\r\n        else if (status === 'starting')\r\n            setServer(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    status: 'connected'\r\n                }\r\n            });\r\n\r\n        return () => {\r\n        }\r\n    }, [status, serverversion]);\r\n\r\n    useEffect(() => {\r\n        updatePerformance();\r\n\r\n        return () => {\r\n        }\r\n    }, [balances]);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"status\", (server) => {\r\n            setServer(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    ...server\r\n                }\r\n            });\r\n        });\r\n        socket.on(\"balances\", (data) => {\r\n            setBalances(data.balances);\r\n            setServer(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    status: 'connected',\r\n                    updated: data.balances.time,\r\n                }\r\n            });\r\n        });\r\n        socket.on(\"performance\", (logs) => {\r\n            setPerformance(logs);\r\n        });\r\n        socket.on(\"configuration\", (config) => {\r\n            setConfiguration(config);\r\n            setConfigurationInput({ ...config, recreate: false });\r\n        });\r\n        socket.on(\"starting-balances\", (sb) => {\r\n            setStartingBalance(sb);\r\n        });\r\n        socket.on(\"event\", function (data) {\r\n            handleEvent(data.log, data.summary);\r\n        });\r\n        socket.on(\"disconnect\", data => {\r\n            setBalances({});\r\n            setServer(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    status: 'disconnected',\r\n                }\r\n            });\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        }\r\n    }, []);\r\n\r\n    return (null);\r\n}","import './App.css';\nimport React, { useEffect } from 'react';\nimport Switch from './pages/Switch';\nimport { ServerProvider } from './context/ServerContext';\nimport { BalancesProvider } from './context/BalancesContext';\nimport { PerformanceProvider } from './context/PerformanceContext';\nimport { ConfigurationProvider } from './context/ConfigurationContext';\nimport { ConfigurationInputProvider } from './context/ConfigurationInputContext';\nimport { StartingBalanceProvider } from './context/StartingBalanceContext';\nimport { FiatProvider } from './context/FiatContext';\nimport { CoinProvider } from './context/CoinContext';\nimport { SnackbarProvider } from 'notistack';\nimport Fade from '@material-ui/core/Fade';\nimport SocketService from './services/SocketService';\nimport { CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  useEffect(() => {\n    const script1 = document.createElement(\"script\");\n    script1.async = true;\n    script1.src = \"https://www.googletagmanager.com/gtag/js?id=G-XBDNDRB9LJ\";\n    document.body.appendChild(script1);\n\n    const script2 = document.createElement(\"script\");\n    script2.text =\n      `window.dataLayer = window.dataLayer || [];\n    function gtag() { dataLayer.push(arguments); }\n    gtag('js', new Date());\n    gtag('config', 'G-XBDNDRB9LJ');`;\n    document.body.appendChild(script2);\n  }, [])\n\n  return (\n    <BrowserRouter>\n      <SnackbarProvider maxSnack={5} anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n        TransitionComponent={Fade}\n      >\n        <ServerProvider>\n          <BalancesProvider>\n            <PerformanceProvider>\n              <ConfigurationProvider>\n                <ConfigurationInputProvider>\n                  <StartingBalanceProvider>\n                    <FiatProvider>\n                      <CoinProvider>\n                        <SocketService />\n                        <CssBaseline />\n                        <Switch />\n                      </CoinProvider>\n                    </FiatProvider>\n                  </StartingBalanceProvider>\n                </ConfigurationInputProvider>\n              </ConfigurationProvider>\n            </PerformanceProvider>\n          </BalancesProvider>\n        </ServerProvider>\n      </SnackbarProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}