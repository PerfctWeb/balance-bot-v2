import { WsFormattedMessage, WsMessage24hrMiniTickerRaw, WsMessage24hrTickerFormatted, WsMessageFuturesUserDataAccountConfigUpdateEventRaw, WsMessageFuturesUserDataAccountUpdateRaw, WsMessageFuturesUserDataEventFormatted, WsMessageFuturesUserDataOrderTradeUpdateEventRaw, WsMessageKlineFormatted, WsMessageKlineRaw, WsMessageMarkPriceUpdateEventFormatted, WsMessageSpotUserDataEventFormatted, WsRawMessage, WsUserDataEvents } from '..';
export declare function isWsFormattedMarkPriceUpdateEvent(data: WsFormattedMessage): data is WsMessageMarkPriceUpdateEventFormatted;
export declare function isWsFormattedMarkPriceUpdateArray(data: WsFormattedMessage): data is WsMessageMarkPriceUpdateEventFormatted[];
/** @deprecated, use isWsFormattedMarkPriceUpdateEvent or isWsFormattedMarkPriceUpdateArray */
export declare function isWsFormattedMarkPriceUpdate(data: WsFormattedMessage): data is WsMessageMarkPriceUpdateEventFormatted[];
export declare function isWsFormattedKline(data: WsFormattedMessage): data is WsMessageKlineFormatted;
export declare function isWsFormatted24hrTicker(data: WsFormattedMessage): data is WsMessage24hrTickerFormatted;
export declare function isWsFormatted24hrTickerArray(data: WsFormattedMessage): data is WsMessage24hrTickerFormatted[];
export declare function isWsFormattedUserDataEvent(data: WsFormattedMessage): data is WsUserDataEvents;
export declare function isWsFormattedSpotUserDataEvent(data: WsFormattedMessage): data is WsMessageSpotUserDataEventFormatted;
export declare function isWsFormattedFuturesUserDataEvent(data: WsFormattedMessage): data is WsMessageFuturesUserDataEventFormatted;
/**
 * Typeguard to validate all symbol 24hrMiniTicker raw event
 */
export declare function isAll24hrMiniTickerRaw(data: WsRawMessage): data is WsMessage24hrMiniTickerRaw[];
/**
 * Typeguard to validate a single 24hrMiniTicker raw event
 */
export declare function is24hrMiniTickerRaw(data: WsRawMessage): data is WsMessage24hrMiniTickerRaw;
/**
 * Typeguard to validate a single kline raw event
 */
export declare function isKlineRaw(data: WsRawMessage): data is WsMessageKlineRaw;
/**
 * Typeguard to validate a single ORDER_TRADE_UPDATE raw event
 */
export declare function isOrderTradeUpdateRaw(data: WsRawMessage): data is WsMessageFuturesUserDataOrderTradeUpdateEventRaw;
/**
 * Typeguard to validate a single ACCOUNT_CONFIG_UPDATE raw event
 */
export declare function isAccountConfigUpdateRaw(data: WsRawMessage): data is WsMessageFuturesUserDataAccountConfigUpdateEventRaw;
/**
 * Typeguard to validate a single ACCOUNT_UPDATE raw event
 */
export declare function isAccountUpdateRaw(data: WsRawMessage): data is WsMessageFuturesUserDataAccountUpdateRaw;
